{
    "metadata": {
        "type": "repo",
        "path": "stream_gpt/constants/function_schemas.py"
    },
    "text": "import stream_gpt.constants.prompts as prompts\n\n                ################################\n                #                              #\n                #    Knowledge Tree Schemas    #\n                #                              #\n                ################################\n                \nRANK_CATEGORIES = [{\n        'name': 'rank_categories', \n        'description': f'{prompts.RANK_CATEGORIES}', \n        'parameters': {\n            'type': 'object', \n            'properties': {\n                'categories': {\n                    'type': 'array', \n                    'items': {\n                        'type': \"object\",\n                        'properties': {\n                            'idea': { \n                                'type': \"int\", \n                                'description': \"Provide numbers of relevant categories. Please say nothing if you don't think any of the categories are relevant.\"},\n                        }\n                    }\n                }\n            }, \n            'required': ['indexed_text']\n        }\n }]\n\n\n                ################################\n                #                              #\n                #     Data Scraper Schemas     #\n                #                              #\n                ################################\n                \nCHOOSE_BEST_SAMPLE = [{\n        'name': 'choose_best_sample',\n        'description': prompts.CHOOSE_BEST_SCRAPED_TEXT, \n        'parameters': {\n            'type': 'object', \n            'properties': {\n                'best_sample': {\n                    'type': 'integer', \n                    'description': 'Provide the number of the sample that you think is best formatted. (No spacing errors, no missing characters, etc.)'\n                }\n            }, \n            'required': ['indexed_text']\n        }\n }]"
}