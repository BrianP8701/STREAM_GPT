{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/examples/data_connectors/PineconeDemo.html",
        "title": "Pinecone Reader - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## Pinecone Reader[\uf0c1](#pinecone-reader \"Permalink to this heading\")\n\nimport logging\nimport sys\n\nlogging.basicConfig(stream\\=sys.stdout, level\\=logging.INFO)\nlogging.getLogger().addHandler(logging.StreamHandler(stream\\=sys.stdout))\n\nfrom llama\\_index.readers.pinecone import PineconeReader\n\nreader \\= PineconeReader(api\\_key\\=api\\_key, environment\\=\"us-west1-gcp\")\n\n\\# the id\\_to\\_text\\_map specifies a mapping from the ID specified in Pinecone to your text.\nid\\_to\\_text\\_map \\= {\n    \"id1\": \"text blob 1\",\n    \"id2\": \"text blob 2\",\n}\n\n\\# the query\\_vector is an embedding representation of your query\\_vector\n\\# Example query vector:\n\\#   query\\_vector=\\[0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3\\]\n\nquery\\_vector \\= \\[n1, n2, n3, ...\\]\n\n\\# NOTE: Required args are index\\_name, id\\_to\\_text\\_map, vector.\n\\# In addition, we pass-through all kwargs that can be passed into the the \\`Query\\` operation in Pinecone.\n\\# See the API reference: https://docs.pinecone.io/reference/query\n\\# and also the Python client: https://github.com/pinecone-io/pinecone-python-client\n\\# for more details.\ndocuments \\= reader.load\\_data(\n    index\\_name\\=\"quickstart\",\n    id\\_to\\_text\\_map\\=id\\_to\\_text\\_map,\n    top\\_k\\=3,\n    vector\\=query\\_vector,\n    separate\\_documents\\=True,\n)\n\n## Create index[\uf0c1](#create-index \"Permalink to this heading\")\n\nindex \\= SummaryIndex.from\\_documents(documents)\n\n\\# set Logging to DEBUG for more detailed outputs\nquery\\_engine \\= index.as\\_query\\_engine()\nresponse \\= query\\_engine.query(\"<query\\_text>\")\n\ndisplay(Markdown(f\"<b>{response}</b>\"))"
}