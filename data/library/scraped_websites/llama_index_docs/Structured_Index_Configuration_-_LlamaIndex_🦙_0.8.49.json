{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/api_reference/struct_store.html",
        "title": "Structured Index Configuration - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## Structured Index Configuration[\uf0c1](#structured-index-configuration \"Permalink to this heading\")\n\nOur structured indices are documented in [Structured Store Index](https://docs.llamaindex.ai/en/stable/api_reference/indices/struct_store.html#ref-indices-structstore). Below, we provide a reference of the classes that are used to configure our structured indices.\n\nSQL wrapper around SQLDatabase in langchain.\n\n_class_ llama\\_index.utilities.sql\\_wrapper.SQLDatabase(_engine: Engine_, _schema: Optional\\[str\\] \\= None_, _metadata: Optional\\[MetaData\\] \\= None_, _ignore\\_tables: Optional\\[List\\[str\\]\\] \\= None_, _include\\_tables: Optional\\[List\\[str\\]\\] \\= None_, _sample\\_rows\\_in\\_table\\_info: int \\= 3_, _indexes\\_in\\_table\\_info: bool \\= False_, _custom\\_table\\_info: Optional\\[dict\\] \\= None_, _view\\_support: bool \\= False_, _max\\_string\\_length: int \\= 300_)[\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase \"Permalink to this definition\")\n\nSQL Database.\n\nThis class provides a wrapper around the SQLAlchemy engine to interact with a SQL database. It provides methods to execute SQL commands, insert data into tables, and retrieve information about the database schema. It also supports optional features such as including or excluding specific tables, sampling rows for table info, including indexes in table info, and supporting views.\n\nBased on langchain SQLDatabase. [https://github.com/langchain-ai/langchain/blob/e355606b1100097665207ca259de6dc548d44c78/libs/langchain/langchain/utilities/sql\\_database.py#L39](https://github.com/langchain-ai/langchain/blob/e355606b1100097665207ca259de6dc548d44c78/libs/langchain/langchain/utilities/sql_database.py#L39)\n\nParameters\n\n*   **engine** (_Engine_) \u2013 The SQLAlchemy engine instance to use for database operations.\n    \n*   **schema** (_Optional__\\[__str__\\]_) \u2013 The name of the schema to use, if any.\n    \n*   **metadata** (_Optional__\\[__MetaData__\\]_) \u2013 The metadata instance to use, if any.\n    \n*   **ignore\\_tables** (_Optional__\\[__List__\\[__str__\\]__\\]_) \u2013 List of table names to ignore. If set, include\\_tables must be None.\n    \n*   **include\\_tables** (_Optional__\\[__List__\\[__str__\\]__\\]_) \u2013 List of table names to include. If set, ignore\\_tables must be None.\n    \n*   **sample\\_rows\\_in\\_table\\_info** (_int_) \u2013 The number of sample rows to include in table info.\n    \n*   **indexes\\_in\\_table\\_info** (_bool_) \u2013 Whether to include indexes in table info.\n    \n*   **custom\\_table\\_info** (_Optional__\\[__dict__\\]_) \u2013 Custom table info to use.\n    \n*   **view\\_support** (_bool_) \u2013 Whether to support views.\n    \n*   **max\\_string\\_length** (_int_) \u2013 The maximum string length to use.\n    \n\n_property_ dialect_: str_[\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.dialect \"Permalink to this definition\")\n\nReturn string representation of dialect to use.\n\n_property_ engine_: Engine_[\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.engine \"Permalink to this definition\")\n\nReturn SQL Alchemy engine.\n\n_classmethod_ from\\_uri(_database\\_uri: str_, _engine\\_args: Optional\\[dict\\] \\= None_, _\\*\\*kwargs: Any_) \u2192 [SQLDatabase](#llama_index.utilities.sql_wrapper.SQLDatabase \"llama_index.utilities.sql_wrapper.SQLDatabase\")[\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.from_uri \"Permalink to this definition\")\n\nConstruct a SQLAlchemy engine from URI.\n\nget\\_single\\_table\\_info(_table\\_name: str_) \u2192 str[\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.get_single_table_info \"Permalink to this definition\")\n\nGet table info for a single table.\n\nget\\_table\\_columns(_table\\_name: str_) \u2192 List\\[Any\\][\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.get_table_columns \"Permalink to this definition\")\n\nGet table columns.\n\nget\\_usable\\_table\\_names() \u2192 Iterable\\[str\\][\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.get_usable_table_names \"Permalink to this definition\")\n\nGet names of tables available.\n\ninsert\\_into\\_table(_table\\_name: str_, _data: dict_) \u2192 None[\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.insert_into_table \"Permalink to this definition\")\n\nInsert data into a table.\n\n_property_ metadata\\_obj_: MetaData_[\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.metadata_obj \"Permalink to this definition\")\n\nReturn SQL Alchemy metadata.\n\nrun\\_sql(_command: str_) \u2192 Tuple\\[str, Dict\\][\uf0c1](#llama_index.utilities.sql_wrapper.SQLDatabase.run_sql \"Permalink to this definition\")\n\nExecute a SQL statement and return a string representing the results.\n\nIf the statement returns rows, a string of the results is returned. If the statement returns no rows, an empty string is returned.\n\nSQL Container builder.\n\n_class_ llama\\_index.indices.struct\\_store.container\\_builder.SQLContextContainerBuilder(_sql\\_database: [SQLDatabase](#llama_index.utilities.sql_wrapper.SQLDatabase \"llama_index.utilities.sql_wrapper.SQLDatabase\")_, _context\\_dict: Optional\\[Dict\\[str, str\\]\\] \\= None_, _context\\_str: Optional\\[str\\] \\= None_)[\uf0c1](#llama_index.indices.struct_store.container_builder.SQLContextContainerBuilder \"Permalink to this definition\")\n\nSQLContextContainerBuilder.\n\nBuild a SQLContextContainer that can be passed to the SQL index during index construction or during query-time.\n\nNOTE: if context\\_str is specified, that will be used as context instead of context\\_dict\n\nParameters\n\n*   **sql\\_database** ([_SQLDatabase_](#llama_index.utilities.sql_wrapper.SQLDatabase \"llama_index.utilities.sql_wrapper.SQLDatabase\")) \u2013 SQL database\n    \n*   **context\\_dict** (_Optional__\\[__Dict__\\[__str__,_ _str__\\]__\\]_) \u2013 context dict\n    \n\nbuild\\_context\\_container(_ignore\\_db\\_schema: bool \\= False_) \u2192 SQLContextContainer[\uf0c1](#llama_index.indices.struct_store.container_builder.SQLContextContainerBuilder.build_context_container \"Permalink to this definition\")\n\nBuild index structure.\n\nderive\\_index\\_from\\_context(_index\\_cls: Type\\[[BaseIndex](https://docs.llamaindex.ai/en/stable/api_reference/indices.html#llama_index.indices.base.BaseIndex \"llama_index.indices.base.BaseIndex\")\\]_, _ignore\\_db\\_schema: bool \\= False_, _\\*\\*index\\_kwargs: Any_) \u2192 [BaseIndex](https://docs.llamaindex.ai/en/stable/api_reference/indices.html#llama_index.indices.base.BaseIndex \"llama_index.indices.base.BaseIndex\")[\uf0c1](#llama_index.indices.struct_store.container_builder.SQLContextContainerBuilder.derive_index_from_context \"Permalink to this definition\")\n\nDerive index from context.\n\n_classmethod_ from\\_documents(_documents\\_dict: Dict\\[str, List\\[[BaseNode](https://docs.llamaindex.ai/en/stable/api_reference/node.html#llama_index.schema.BaseNode \"llama_index.schema.BaseNode\")\\]\\]_, _sql\\_database: [SQLDatabase](#llama_index.utilities.sql_wrapper.SQLDatabase \"llama_index.utilities.sql_wrapper.SQLDatabase\")_, _\\*\\*context\\_builder\\_kwargs: Any_) \u2192 [SQLContextContainerBuilder](#llama_index.indices.struct_store.container_builder.SQLContextContainerBuilder \"llama_index.indices.struct_store.container_builder.SQLContextContainerBuilder\")[\uf0c1](#llama_index.indices.struct_store.container_builder.SQLContextContainerBuilder.from_documents \"Permalink to this definition\")\n\nBuild context from documents.\n\nquery\\_index\\_for\\_context(_index: [BaseIndex](https://docs.llamaindex.ai/en/stable/api_reference/indices.html#llama_index.indices.base.BaseIndex \"llama_index.indices.base.BaseIndex\")_, _query\\_str: Union\\[str, [QueryBundle](https://docs.llamaindex.ai/en/stable/api_reference/query/query_bundle.html#llama_index.indices.query.schema.QueryBundle \"llama_index.indices.query.schema.QueryBundle\")\\]_, _query\\_tmpl: Optional\\[str\\] \\= 'Please return the relevant tables (including the full schema) for the following query: {orig\\_query\\_str}'_, _store\\_context\\_str: bool \\= True_, _\\*\\*index\\_kwargs: Any_) \u2192 str[\uf0c1](#llama_index.indices.struct_store.container_builder.SQLContextContainerBuilder.query_index_for_context \"Permalink to this definition\")\n\nQuery index for context.\n\nA simple wrapper around the index.query call which injects a query template to specifically fetch table information, and can store a context\\_str.\n\nParameters\n\n*   **index** ([_BaseIndex_](https://docs.llamaindex.ai/en/stable/api_reference/indices.html#llama_index.indices.base.BaseIndex \"llama_index.indices.base.BaseIndex\")) \u2013 index data structure\n    \n*   **query\\_str** (_QueryType_) \u2013 query string\n    \n*   **query\\_tmpl** (_Optional__\\[__str__\\]_) \u2013 query template\n    \n*   **store\\_context\\_str** (_bool_) \u2013 store context\\_str\n    \n\nCommon classes for structured operations.\n\nExtracts datapoints from a structured document.\n\nExtract datapoint from a document and insert it.\n\n_class_ llama\\_index.indices.common.struct\\_store.base.SQLDocumentContextBuilder(_sql\\_database: [SQLDatabase](#llama_index.utilities.sql_wrapper.SQLDatabase \"llama_index.utilities.sql_wrapper.SQLDatabase\")_, _service\\_context: Optional\\[[ServiceContext](https://docs.llamaindex.ai/en/stable/api_reference/service_context.html#llama_index.indices.service_context.ServiceContext \"llama_index.indices.service_context.ServiceContext\")\\] \\= None_, _text\\_splitter: Optional\\[TextSplitter\\] \\= None_, _table\\_context\\_prompt: Optional\\[[BasePromptTemplate](https://docs.llamaindex.ai/en/stable/api_reference/prompts.html#llama_index.prompts.base.BasePromptTemplate \"llama_index.prompts.base.BasePromptTemplate\")\\] \\= None_, _refine\\_table\\_context\\_prompt: Optional\\[[BasePromptTemplate](https://docs.llamaindex.ai/en/stable/api_reference/prompts.html#llama_index.prompts.base.BasePromptTemplate \"llama_index.prompts.base.BasePromptTemplate\")\\] \\= None_, _table\\_context\\_task: Optional\\[str\\] \\= None_)[\uf0c1](#llama_index.indices.common.struct_store.base.SQLDocumentContextBuilder \"Permalink to this definition\")\n\nBuilder that builds context for a given set of SQL tables.\n\nParameters\n\n*   **sql\\_database** (_Optional__\\[_[_SQLDatabase_](#llama_index.utilities.sql_wrapper.SQLDatabase \"llama_index.utilities.sql_wrapper.SQLDatabase\")_\\]_) \u2013 SQL database to use,\n    \n*   **llm\\_predictor** (_Optional__\\[__BaseLLMPredictor__\\]_) \u2013 LLM Predictor to use.\n    \n*   **prompt\\_helper** (_Optional__\\[_[_PromptHelper_](https://docs.llamaindex.ai/en/stable/api_reference/service_context/prompt_helper.html#llama_index.indices.prompt_helper.PromptHelper \"llama_index.indices.prompt_helper.PromptHelper\")_\\]_) \u2013 Prompt Helper to use.\n    \n*   **text\\_splitter** (_Optional__\\[__TextSplitter__\\]_) \u2013 Text Splitter to use.\n    \n*   **table\\_context\\_prompt** (_Optional__\\[_[_BasePromptTemplate_](https://docs.llamaindex.ai/en/stable/api_reference/prompts.html#llama_index.prompts.base.BasePromptTemplate \"llama_index.prompts.base.BasePromptTemplate\")_\\]_) \u2013 A Table Context Prompt (see [Prompt Templates](https://docs.llamaindex.ai/en/stable/api_reference/prompts.html#prompt-templates)).\n    \n*   **refine\\_table\\_context\\_prompt** (_Optional__\\[_[_BasePromptTemplate_](https://docs.llamaindex.ai/en/stable/api_reference/prompts.html#llama_index.prompts.base.BasePromptTemplate \"llama_index.prompts.base.BasePromptTemplate\")_\\]_) \u2013 A Refine Table Context Prompt (see [Prompt Templates](https://docs.llamaindex.ai/en/stable/api_reference/prompts.html#prompt-templates)).\n    \n*   **table\\_context\\_task** (_Optional__\\[__str__\\]_) \u2013 The query to perform on the table context. A default query string is used if none is provided by the user.\n    \n\nbuild\\_all\\_context\\_from\\_documents(_documents\\_dict: Dict\\[str, List\\[[BaseNode](https://docs.llamaindex.ai/en/stable/api_reference/node.html#llama_index.schema.BaseNode \"llama_index.schema.BaseNode\")\\]\\]_) \u2192 Dict\\[str, str\\][\uf0c1](#llama_index.indices.common.struct_store.base.SQLDocumentContextBuilder.build_all_context_from_documents \"Permalink to this definition\")\n\nBuild context for all tables in the database.\n\nbuild\\_table\\_context\\_from\\_documents(_documents: Sequence\\[[BaseNode](https://docs.llamaindex.ai/en/stable/api_reference/node.html#llama_index.schema.BaseNode \"llama_index.schema.BaseNode\")\\]_, _table\\_name: str_) \u2192 str[\uf0c1](#llama_index.indices.common.struct_store.base.SQLDocumentContextBuilder.build_table_context_from_documents \"Permalink to this definition\")\n\nBuild context from documents for a single table."
}