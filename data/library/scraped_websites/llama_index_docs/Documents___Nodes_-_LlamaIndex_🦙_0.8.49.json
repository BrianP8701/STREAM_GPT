{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/core_modules/data_modules/documents_and_nodes/root.html",
        "title": "Documents / Nodes - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## Documents / Nodes[\uf0c1](#documents-nodes \"Permalink to this heading\")\n\n## Concept[\uf0c1](#concept \"Permalink to this heading\")\n\nDocument and Node objects are core abstractions within LlamaIndex.\n\nA **Document** is a generic container around any data source - for instance, a PDF, an API output, or retrieved data from a database. They can be constructed manually, or created automatically via our data loaders. By default, a Document stores text along with some other attributes. Some of these are listed below.\n\n*   `metadata` - a dictionary of annotations that can be appended to the text.\n    \n*   `relationships` - a dictionary containing relationships to other Documents/Nodes.\n    \n\n_Note_: We have beta support for allowing Documents to store images, and are actively working on improving its multimodal capabilities.\n\nA **Node** represents a \u201cchunk\u201d of a source Document, whether that is a text chunk, an image, or other. Similar to Documents, they contain metadata and relationship information with other nodes.\n\nNodes are a first-class citizen in LlamaIndex. You can choose to define Nodes and all its attributes directly. You may also choose to \u201cparse\u201d source Documents into Nodes through our `NodeParser` classes. By default every Node derived from a Document will inherit the same metadata from that Document (e.g. a \u201cfile\\_name\u201d filed in the Document is propagated to every Node).\n\n## Usage Pattern[\uf0c1](#usage-pattern \"Permalink to this heading\")\n\nHere are some simple snippets to get started with Documents and Nodes.\n\n### Documents[\uf0c1](#documents \"Permalink to this heading\")\n\nfrom llama\\_index import Document, VectorStoreIndex\n\ntext\\_list \\= \\[text1, text2, ...\\]\ndocuments \\= \\[Document(text\\=t) for t in text\\_list\\]\n\n\\# build index\nindex \\= VectorStoreIndex.from\\_documents(documents)\n\n### Nodes[\uf0c1](#nodes \"Permalink to this heading\")\n\nfrom llama\\_index.node\\_parser import SimpleNodeParser\n\n\\# load documents\n...\n\n\\# parse nodes\nparser \\= SimpleNodeParser.from\\_defaults()\nnodes \\= parser.get\\_nodes\\_from\\_documents(documents)\n\n\\# build index\nindex \\= VectorStoreIndex(nodes)"
}