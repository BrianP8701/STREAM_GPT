{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/examples/vector_stores/Neo4jVectorDemo.html",
        "title": "Neo4j vector store - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## Neo4j vector store[\uf0c1](#neo4j-vector-store \"Permalink to this heading\")\n\nimport os\nimport openai\n\nos.environ\\[\"OPENAI\\_API\\_KEY\"\\] \\= \"YOUR\\_API\\_KEY\\_HERE\"\nopenai.api\\_key \\= os.environ\\[\"OPENAI\\_API\\_KEY\"\\]\n\n## Initiate Neo4j vector wrapper[\uf0c1](#initiate-neo4j-vector-wrapper \"Permalink to this heading\")\n\nfrom llama\\_index.vector\\_stores import Neo4jVectorStore\n\nusername \\= \"neo4j\"\npassword \\= \"pleaseletmein\"\nurl \\= \"bolt://localhost:7687\"\nembed\\_dim \\= 1536\n\nneo4j\\_vector \\= Neo4jVectorStore(username, password, url, embed\\_dim)\n\n## Load documents, build the VectorStoreIndex[\uf0c1](#load-documents-build-the-vectorstoreindex \"Permalink to this heading\")\n\nfrom llama\\_index import VectorStoreIndex, SimpleDirectoryReader\nfrom IPython.display import Markdown, display\n\n\\# load documents\ndocuments \\= SimpleDirectoryReader(\"../data/paul\\_graham\").load\\_data()\n\nfrom llama\\_index.storage.storage\\_context import StorageContext\n\nstorage\\_context \\= StorageContext.from\\_defaults(vector\\_store\\=neo4j\\_vector)\nindex \\= VectorStoreIndex.from\\_documents(\n    documents, storage\\_context\\=storage\\_context\n)\n\nquery\\_engine \\= index.as\\_query\\_engine()\nresponse \\= query\\_engine.query(\"What happened at interleaf?\")\ndisplay(Markdown(f\"<b>{response}</b>\"))\n\n**At Interleaf, there was a group called Release Engineering that seemed to be as big as the group that actually wrote the software. The software at Interleaf had to be updated on the server, and there was a lot of work involved in maintaining and releasing new versions.**\n\n## Load existing vector index[\uf0c1](#load-existing-vector-index \"Permalink to this heading\")\n\nIn order to connect to an existing vector index, you need to define the `index_name` and `text_node_property` parameters:\n\n*   index\\_name: name of the existing vector index (default is `vector`)\n    \n*   text\\_node\\_property: name of the property that containt the text value (default is `text`)\n    \n\nindex\\_name \\= \"existing\\_index\"\ntext\\_node\\_property \\= \"text\"\nexisting\\_vector \\= Neo4jVectorStore(\n    username,\n    password,\n    url,\n    embed\\_dim,\n    index\\_name\\=index\\_name,\n    text\\_node\\_property\\=text\\_node\\_property,\n)\n\nloaded\\_index \\= VectorStoreIndex.from\\_vector\\_store(existing\\_vector)"
}