{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/examples/llm/llama_api.html",
        "title": "Llama API - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## Llama API[\uf0c1](#llama-api \"Permalink to this heading\")\n\n[Llama API](https://www.llama-api.com/) is a hosted API for Llama 2 with function calling support.\n\n## Setup[\uf0c1](#setup \"Permalink to this heading\")\n\nTo start, go to https://www.llama-api.com/ to obtain an API key\n\nfrom llama\\_index.llms.llama\\_api import LlamaAPI\n\nllm \\= LlamaAPI(api\\_key\\=api\\_key)\n\n## Basic Usage[\uf0c1](#basic-usage \"Permalink to this heading\")\n\n### Call `complete` with a prompt[\uf0c1](#call-complete-with-a-prompt \"Permalink to this heading\")\n\nresp \\= llm.complete(\"Paul Graham is \")\n\nPaul Graham is a well-known computer scientist and entrepreneur, best known for his work as a co-founder of Viaweb and later Y Combinator, a successful startup accelerator. He is also a prominent essayist and has written extensively on topics such as entrepreneurship, software development, and the tech industry.\n\n### Call `chat` with a list of messages[\uf0c1](#call-chat-with-a-list-of-messages \"Permalink to this heading\")\n\nfrom llama\\_index.llms import ChatMessage\n\nmessages \\= \\[\n    ChatMessage(\n        role\\=\"system\", content\\=\"You are a pirate with a colorful personality\"\n    ),\n    ChatMessage(role\\=\"user\", content\\=\"What is your name\"),\n\\]\nresp \\= llm.chat(messages)\n\nassistant: Arrrr, me hearty! Me name be Captain Blackbeak, the scurviest dog on the seven seas! Yer lookin' fer a swashbucklin' adventure, eh? Well, hoist the sails and set course fer the high seas, matey! I be here to help ye find yer treasure and battle any scurvy dogs who dare cross our path! So, what be yer first question, landlubber?\n\n## Function Calling[\uf0c1](#function-calling \"Permalink to this heading\")\n\nfrom pydantic import BaseModel\nfrom llama\\_index.llms.openai\\_utils import to\\_openai\\_function\n\nclass Song(BaseModel):\n    \"\"\"A song with name and artist\"\"\"\n\n    name: str\n    artist: str\n\nsong\\_fn \\= to\\_openai\\_function(Song)\n\nllm \\= LlamaAPI(api\\_key\\=api\\_key)\nresponse \\= llm.complete(\"Generate a song\", functions\\=\\[song\\_fn\\])\nfunction\\_call \\= response.additional\\_kwargs\\[\"function\\_call\"\\]\nprint(function\\_call)\n\n{'name': 'Song', 'arguments': {'name': 'Happy', 'artist': 'Pharrell Williams'}}"
}