{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/examples/vector_stores/LanceDBIndexDemo.html",
        "title": "LanceDB Vector Store - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## LanceDB Vector Store[\uf0c1](#lancedb-vector-store \"Permalink to this heading\")\n\nIn this notebook we are going to show how to use [LanceDB](https://www.lancedb.com/) to perform vector searches in LlamaIndex\n\nimport logging\nimport sys\n\n\\# Uncomment to see debug logs\n\\# logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\n\\# logging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\n\nfrom llama\\_index import SimpleDirectoryReader, Document, StorageContext\nfrom llama\\_index.indices.vector\\_store import VectorStoreIndex\nfrom llama\\_index.vector\\_stores import LanceDBVectorStore\nimport textwrap\n\n## Setup OpenAI[\uf0c1](#setup-openai \"Permalink to this heading\")\n\nThe first step is to configure the openai key. It will be used to created embeddings for the documents loaded into the index\n\nimport openai\n\nopenai.api\\_key \\= \"\"\n\n## Loading documents[\uf0c1](#loading-documents \"Permalink to this heading\")\n\nLoad the documents stored in the `paul_graham_essay/data` using the SimpleDirectoryReader\n\ndocuments \\= SimpleDirectoryReader(\n    \"../../../examples/paul\\_graham\\_essay/data\"\n).load\\_data()\nprint(\"Document ID:\", documents\\[0\\].doc\\_id, \"Document Hash:\", documents\\[0\\].hash)\n\nDocument ID: 855fe1d1-1c1a-4fbe-82ba-6bea663a5920 Document Hash: 4c702b4df575421e1d1af4b1fd50511b226e0c9863dbfffeccb8b689b8448f35\n\n## Create the index[\uf0c1](#create-the-index \"Permalink to this heading\")\n\nHere we create an index backed by LanceDB using the documents loaded previously. LanceDBVectorStore takes a few arguments.\n\n*   uri (str, required): Location where LanceDB will store its files.\n    \n*   table\\_name (str, optional): The table name where the embeddings will be stored. Defaults to \u201cvectors\u201d.\n    \n*   nprobes (int, optional): The number of probes used. A higher number makes search more accurate but also slower. Defaults to 20.\n    \n*   refine\\_factor: (int, optional): Refine the results by reading extra elements and re-ranking them in memory. Defaults to None\n    \n*   More details can be found at the [LanceDB docs](https://lancedb.github.io/lancedb/ann_indexes)\n    \n\nvector\\_store \\= LanceDBVectorStore(uri\\=\"/tmp/lancedb\")\nstorage\\_context \\= StorageContext.from\\_defaults(vector\\_store\\=vector\\_store)\nindex \\= VectorStoreIndex.from\\_documents(\n    documents, storage\\_context\\=storage\\_context\n)\n\n## Query the index[\uf0c1](#query-the-index \"Permalink to this heading\")\n\nWe can now ask questions using our index.\n\nquery\\_engine \\= index.as\\_query\\_engine()\nresponse \\= query\\_engine.query(\"How much did Viaweb charge per month?\")\n\nprint(textwrap.fill(str(response), 100))\n\nViaweb charged $100 per month for a small store and $300 per month for a big one.\n\nresponse \\= query\\_engine.query(\"What did the author do growing up?\")\n\nprint(textwrap.fill(str(response), 100))\n\nThe author worked on writing and programming outside of school before college. They wrote short\nstories and tried writing programs on the IBM 1401 computer. They also mentioned getting a\nmicrocomputer, a TRS-80, and started programming on it.\n\n## Appending data[\uf0c1](#appending-data \"Permalink to this heading\")\n\nYou can also add data to an existing index\n\ndel index\n\nindex \\= VectorStoreIndex.from\\_documents(\n    \\[Document(text\\=\"The sky is purple in Portland, Maine\")\\],\n    uri\\=\"/tmp/new\\_dataset\",\n)\n\nquery\\_engine \\= index.as\\_query\\_engine()\nresponse \\= query\\_engine.query(\"Where is the sky purple?\")\nprint(textwrap.fill(str(response), 100))\n\nThe sky is purple in Portland, Maine.\n\nindex \\= VectorStoreIndex.from\\_documents(documents, uri\\=\"/tmp/new\\_dataset\")\n\nquery\\_engine \\= index.as\\_query\\_engine()\nresponse \\= query\\_engine.query(\"What companies did the author start?\")\nprint(textwrap.fill(str(response), 100))\n\nThe author started two companies: Viaweb and Y Combinator."
}