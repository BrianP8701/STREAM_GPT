{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/examples/evaluation/BeirEvaluation.html",
        "title": "BEIR Out of Domain Benchmark - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "Toggle table of contents sidebar\n\nAbout [BEIR](https://github.com/beir-cellar/beir):\n\nBEIR is a heterogeneous benchmark containing diverse IR tasks. It also provides a common and easy framework for evaluation of your retrieval methods within the benchmark.\n\nRefer to the repo via the link for a full list of supported datasets.\n\nHere, we test the `all-MiniLM-L6-v2` sentence-transformer embedding, which is one of the fastest for the given accuracy range. We set the top\\_k value for the retriever to 30. We also use the nfcorpus dataset.\n\nfrom llama\\_index.embeddings import HuggingFaceEmbedding\nfrom llama\\_index.evaluation.benchmarks import BeirEvaluator\nfrom llama\\_index import ServiceContext, VectorStoreIndex\n\ndef create\\_retriever(documents):\n    embed\\_model \\= HuggingFaceEmbedding(model\\_name\\=\"BAAI/bge-small-en-v1.5\")\n    service\\_context \\= ServiceContext.from\\_defaults(embed\\_model\\=embed\\_model)\n    index \\= VectorStoreIndex.from\\_documents(\n        documents, service\\_context\\=service\\_context, show\\_progress\\=True\n    )\n    return index.as\\_retriever(similarity\\_top\\_k\\=30)\n\nBeirEvaluator().run(\n    create\\_retriever, datasets\\=\\[\"nfcorpus\"\\], metrics\\_k\\_values\\=\\[3, 10, 30\\]\n)\n\n/home/jonch/.pyenv/versions/3.10.6/lib/python3.10/site-packages/beir/datasets/data\\_loader.py:2: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user\\_install.html\n  from tqdm.autonotebook import tqdm\n\nDataset: nfcorpus downloaded at: /home/jonch/.cache/llama\\_index/datasets/BeIR\\_\\_nfcorpus\nEvaluating on dataset: nfcorpus\n-------------------------------------\n\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3633/3633 \\[00:00<00:00, 141316.79it/s\\]\nParsing documents into nodes: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3633/3633 \\[00:06<00:00, 569.35it/s\\]\nGenerating embeddings: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3649/3649 \\[04:22<00:00, 13.92it/s\\]\n\nRetriever created for:  nfcorpus\nEvaluating retriever on questions against qrels\n\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 323/323 \\[01:26<00:00,  3.74it/s\\]\n\nResults for: nfcorpus\n{'NDCG@3': 0.35476, 'MAP@3': 0.07489, 'Recall@3': 0.08583, 'precision@3': 0.33746}\n{'NDCG@10': 0.31403, 'MAP@10': 0.11003, 'Recall@10': 0.15885, 'precision@10': 0.23994}\n{'NDCG@30': 0.28636, 'MAP@30': 0.12794, 'Recall@30': 0.21653, 'precision@30': 0.14716}\n-------------------------------------\n\nHigher is better for all the evaluation metrics.\n\nThis [towardsdatascience article](https://towardsdatascience.com/ranking-evaluation-metrics-for-recommender-systems-263d0a66ef54) covers NDCG, MAP and MRR in greater depth."
}