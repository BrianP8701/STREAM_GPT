{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/examples/data_connectors/DatabaseReaderDemo.html",
        "title": "Database Reader - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## Database Reader[\uf0c1](#database-reader \"Permalink to this heading\")\n\nimport logging\nimport sys\n\nlogging.basicConfig(stream\\=sys.stdout, level\\=logging.INFO)\nlogging.getLogger().addHandler(logging.StreamHandler(stream\\=sys.stdout))\n\nfrom \\_\\_future\\_\\_ import absolute\\_import\n\n\\# My OpenAI Key\nimport os\n\nos.environ\\[\"OPENAI\\_API\\_KEY\"\\] \\= \"\"\n\nfrom llama\\_index.readers.database import DatabaseReader\nfrom llama\\_index import VectorStoreIndex\n\n\\# Initialize DatabaseReader object with the following parameters:\n\ndb \\= DatabaseReader(\n    scheme\\=\"postgresql\",  \\# Database Scheme\n    host\\=\"localhost\",  \\# Database Host\n    port\\=\"5432\",  \\# Database Port\n    user\\=\"postgres\",  \\# Database User\n    password\\=\"FakeExamplePassword\",  \\# Database Password\n    dbname\\=\"postgres\",  \\# Database Name\n)\n\n\\### DatabaseReader class ###\n\\# db is an instance of DatabaseReader:\nprint(type(db))\n\\# DatabaseReader available method:\nprint(type(db.load\\_data))\n\n\\### SQLDatabase class ###\n\\# db.sql is an instance of SQLDatabase:\nprint(type(db.sql\\_database))\n\\# SQLDatabase available methods:\nprint(type(db.sql\\_database.from\\_uri))\nprint(type(db.sql\\_database.get\\_single\\_table\\_info))\nprint(type(db.sql\\_database.get\\_table\\_columns))\nprint(type(db.sql\\_database.get\\_usable\\_table\\_names))\nprint(type(db.sql\\_database.insert\\_into\\_table))\nprint(type(db.sql\\_database.run\\_sql))\n\\# SQLDatabase available properties:\nprint(type(db.sql\\_database.dialect))\nprint(type(db.sql\\_database.engine))\n\n\\### Testing DatabaseReader\n\\### from SQLDatabase, SQLAlchemy engine and Database URI:\n\n\\# From SQLDatabase instance:\nprint(type(db.sql\\_database))\ndb\\_from\\_sql\\_database \\= DatabaseReader(sql\\_database\\=db.sql\\_database)\nprint(type(db\\_from\\_sql\\_database))\n\n\\# From SQLAlchemy engine:\nprint(type(db.sql\\_database.engine))\ndb\\_from\\_engine \\= DatabaseReader(engine\\=db.sql\\_database.engine)\nprint(type(db\\_from\\_engine))\n\n\\# From Database URI:\nprint(type(db.uri))\ndb\\_from\\_uri \\= DatabaseReader(uri\\=db.uri)\nprint(type(db\\_from\\_uri))\n\n\\# The below SQL Query example returns a list values of each row\n\\# with concatenated text from the name and age columns\n\\# from the users table where the age is greater than or equal to 18\n\nquery \\= f\"\"\"\n    SELECT\n        CONCAT(name, ' is ', age, ' years old.') AS text\n    FROM public.users\n    WHERE age >= 18\n    \"\"\"\n\n\\# Please refer to llama\\_index.utilities.sql\\_wrapper\n\\# SQLDatabase.run\\_sql method\ntexts \\= db.sql\\_database.run\\_sql(command\\=query)\n\n\\# Display type(texts) and texts\n\\# type(texts) must return <class 'list'>\nprint(type(texts))\n\n\\# Documents must return a list of Tuple objects\nprint(texts)\n\n\\# Please refer to llama\\_index.readers.database.DatabaseReader.load\\_data\n\\# DatabaseReader.load\\_data method\ndocuments \\= db.load\\_data(query\\=query)\n\n\\# Display type(documents) and documents\n\\# type(documents) must return <class 'list'>\nprint(type(documents))\n\n\\# Documents must return a list of Document objects\nprint(documents)\n\nindex \\= VectorStoreIndex.from\\_documents(documents)"
}