{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/api_reference/node.html",
        "title": "Node - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "Toggle table of contents sidebar\n\n## Node[\uf0c1](#module-llama_index.schema \"Permalink to this heading\")\n\nBase schema for data structures.\n\n_pydantic model_ llama\\_index.schema.BaseComponent[\uf0c1](#llama_index.schema.BaseComponent \"Permalink to this definition\")\n\nBase component object to capture class names.\n\nShow JSON schema\n\n{\n   \"title\": \"BaseComponent\",\n   \"description\": \"Base component object to capture class names.\",\n   \"type\": \"object\",\n   \"properties\": {}\n}\n\n_abstract classmethod_ class\\_name() \u2192 str[\uf0c1](#llama_index.schema.BaseComponent.class_name \"Permalink to this definition\")\n\nGet the class name, used as a unique ID in serialization.\n\nThis provides a key that makes serialization robust against actual class name changes.\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.schema.BaseComponent.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.BaseComponent.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.BaseComponent.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ from\\_dict(_data: Dict\\[str, Any\\]_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.BaseComponent.from_dict \"Permalink to this definition\")\n\n_classmethod_ from\\_json(_data\\_str: str_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.BaseComponent.from_json \"Permalink to this definition\")\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.BaseComponent.from_orm \"Permalink to this definition\")\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.BaseComponent.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.BaseComponent.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.BaseComponent.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.BaseComponent.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.BaseComponent.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.BaseComponent.schema_json \"Permalink to this definition\")\n\nto\\_dict(_\\*\\*kwargs: Any_) \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.BaseComponent.to_dict \"Permalink to this definition\")\n\nto\\_json(_\\*\\*kwargs: Any_) \u2192 str[\uf0c1](#llama_index.schema.BaseComponent.to_json \"Permalink to this definition\")\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.schema.BaseComponent.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.schema.BaseComponent.validate \"Permalink to this definition\")\n\n_pydantic model_ llama\\_index.schema.BaseNode[\uf0c1](#llama_index.schema.BaseNode \"Permalink to this definition\")\n\nBase node Object.\n\nGeneric abstract interface for retrievable nodes\n\nShow JSON schema\n\n{\n   \"title\": \"BaseNode\",\n   \"description\": \"Base node Object.\\\\n\\\\nGeneric abstract interface for retrievable nodes\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"id\\_\": {\n         \"title\": \"Id \",\n         \"description\": \"Unique ID of the node.\",\n         \"type\": \"string\"\n      },\n      \"embedding\": {\n         \"title\": \"Embedding\",\n         \"description\": \"Embedding of the node.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"number\"\n         }\n      },\n      \"extra\\_info\": {\n         \"title\": \"Extra Info\",\n         \"description\": \"A flat dictionary of metadata fields\",\n         \"type\": \"object\"\n      },\n      \"excluded\\_embed\\_metadata\\_keys\": {\n         \"title\": \"Excluded Embed Metadata Keys\",\n         \"description\": \"Metadata keys that are excluded from text for the embed model.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"string\"\n         }\n      },\n      \"excluded\\_llm\\_metadata\\_keys\": {\n         \"title\": \"Excluded Llm Metadata Keys\",\n         \"description\": \"Metadata keys that are excluded from text for the LLM.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"string\"\n         }\n      },\n      \"relationships\": {\n         \"title\": \"Relationships\",\n         \"description\": \"A mapping of relationships to other node information.\",\n         \"type\": \"object\",\n         \"additionalProperties\": {\n            \"anyOf\": \\[\n               {\n                  \"$ref\": \"#/definitions/RelatedNodeInfo\"\n               },\n               {\n                  \"type\": \"array\",\n                  \"items\": {\n                     \"$ref\": \"#/definitions/RelatedNodeInfo\"\n                  }\n               }\n            \\]\n         }\n      },\n      \"hash\": {\n         \"title\": \"Hash\",\n         \"description\": \"Hash of the node content.\",\n         \"default\": \"\",\n         \"type\": \"string\"\n      }\n   },\n   \"definitions\": {\n      \"ObjectType\": {\n         \"title\": \"ObjectType\",\n         \"description\": \"An enumeration.\",\n         \"enum\": \\[\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\"\n         \\],\n         \"type\": \"string\"\n      },\n      \"RelatedNodeInfo\": {\n         \"title\": \"RelatedNodeInfo\",\n         \"description\": \"Base component object to capture class names.\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"node\\_id\": {\n               \"title\": \"Node Id\",\n               \"type\": \"string\"\n            },\n            \"node\\_type\": {\n               \"$ref\": \"#/definitions/ObjectType\"\n            },\n            \"metadata\": {\n               \"title\": \"Metadata\",\n               \"type\": \"object\"\n            },\n            \"hash\": {\n               \"title\": \"Hash\",\n               \"type\": \"string\"\n            }\n         },\n         \"required\": \\[\n            \"node\\_id\"\n         \\]\n      }\n   }\n}\n\nConfig\n\n*   **allow\\_population\\_by\\_field\\_name**: _bool = True_\n    \n\nFields\n\n*   [`embedding (Optional[List[float]])`](#llama_index.schema.BaseNode.embedding \"llama_index.schema.BaseNode.embedding\")\n    \n*   [`excluded_embed_metadata_keys (List[str])`](#llama_index.schema.BaseNode.excluded_embed_metadata_keys \"llama_index.schema.BaseNode.excluded_embed_metadata_keys\")\n    \n*   [`excluded_llm_metadata_keys (List[str])`](#llama_index.schema.BaseNode.excluded_llm_metadata_keys \"llama_index.schema.BaseNode.excluded_llm_metadata_keys\")\n    \n*   [`hash (str)`](#llama_index.schema.BaseNode.hash \"llama_index.schema.BaseNode.hash\")\n    \n*   [`id_ (str)`](#llama_index.schema.BaseNode.id_ \"llama_index.schema.BaseNode.id_\")\n    \n*   [`metadata (Dict[str, Any])`](#llama_index.schema.BaseNode.metadata \"llama_index.schema.BaseNode.metadata\")\n    \n*   [`relationships (Dict[llama_index.schema.NodeRelationship, Union[llama_index.schema.RelatedNodeInfo, List[llama_index.schema.RelatedNodeInfo]]])`](#llama_index.schema.BaseNode.relationships \"llama_index.schema.BaseNode.relationships\")\n    \n\n_field_ embedding_: Optional\\[List\\[float\\]\\]_ _\\= None_[\uf0c1](#llama_index.schema.BaseNode.embedding \"Permalink to this definition\")\n\n\u201d metadata fields - injected as part of the text shown to LLMs as context - injected as part of the text for generating embeddings - used by vector DBs for metadata filtering\n\nEmbedding of the node.\n\n_field_ excluded\\_embed\\_metadata\\_keys_: List\\[str\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.BaseNode.excluded_embed_metadata_keys \"Permalink to this definition\")\n\nMetadata keys that are excluded from text for the embed model.\n\n_field_ excluded\\_llm\\_metadata\\_keys_: List\\[str\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.BaseNode.excluded_llm_metadata_keys \"Permalink to this definition\")\n\nMetadata keys that are excluded from text for the LLM.\n\n_field_ hash_: str_ _\\= ''_[\uf0c1](#llama_index.schema.BaseNode.hash \"Permalink to this definition\")\n\nHash of the node content.\n\n_field_ id\\__: str_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.BaseNode.id_ \"Permalink to this definition\")\n\nUnique ID of the node.\n\n_field_ metadata_: Dict\\[str, Any\\]_ _\\[Optional\\]_ _(alias 'extra\\_info')_[\uf0c1](#llama_index.schema.BaseNode.metadata \"Permalink to this definition\")\n\nA flat dictionary of metadata fields\n\n_field_ relationships_: Dict\\[[NodeRelationship](#llama_index.schema.NodeRelationship \"llama_index.schema.NodeRelationship\"), Union\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\"), List\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]\\]\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.BaseNode.relationships \"Permalink to this definition\")\n\nA mapping of relationships to other node information.\n\nGet node as RelatedNodeInfo.\n\n_abstract classmethod_ class\\_name() \u2192 str[\uf0c1](#llama_index.schema.BaseNode.class_name \"Permalink to this definition\")\n\nGet the class name, used as a unique ID in serialization.\n\nThis provides a key that makes serialization robust against actual class name changes.\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.schema.BaseNode.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.BaseNode.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.BaseNode.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ from\\_dict(_data: Dict\\[str, Any\\]_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.BaseNode.from_dict \"Permalink to this definition\")\n\n_classmethod_ from\\_json(_data\\_str: str_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.BaseNode.from_json \"Permalink to this definition\")\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.BaseNode.from_orm \"Permalink to this definition\")\n\n_abstract_ get\\_content(_metadata\\_mode: [MetadataMode](#llama_index.schema.MetadataMode \"llama_index.schema.MetadataMode\") \\= MetadataMode.ALL_) \u2192 str[\uf0c1](#llama_index.schema.BaseNode.get_content \"Permalink to this definition\")\n\nGet object content.\n\nget\\_embedding() \u2192 List\\[float\\][\uf0c1](#llama_index.schema.BaseNode.get_embedding \"Permalink to this definition\")\n\nGet embedding.\n\nErrors if embedding is None.\n\n_abstract_ get\\_metadata\\_str(_mode: [MetadataMode](#llama_index.schema.MetadataMode \"llama_index.schema.MetadataMode\") \\= MetadataMode.ALL_) \u2192 str[\uf0c1](#llama_index.schema.BaseNode.get_metadata_str \"Permalink to this definition\")\n\nMetadata string.\n\n_abstract classmethod_ get\\_type() \u2192 str[\uf0c1](#llama_index.schema.BaseNode.get_type \"Permalink to this definition\")\n\nGet Object type.\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.BaseNode.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.BaseNode.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.BaseNode.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.BaseNode.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.BaseNode.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.BaseNode.schema_json \"Permalink to this definition\")\n\n_abstract_ set\\_content(_value: Any_) \u2192 None[\uf0c1](#llama_index.schema.BaseNode.set_content \"Permalink to this definition\")\n\nSet the content of the node.\n\nto\\_dict(_\\*\\*kwargs: Any_) \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.BaseNode.to_dict \"Permalink to this definition\")\n\nto\\_json(_\\*\\*kwargs: Any_) \u2192 str[\uf0c1](#llama_index.schema.BaseNode.to_json \"Permalink to this definition\")\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.schema.BaseNode.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.schema.BaseNode.validate \"Permalink to this definition\")\n\n_property_ child\\_nodes_: Optional\\[List\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]\\]_[\uf0c1](#llama_index.schema.BaseNode.child_nodes \"Permalink to this definition\")\n\nChild nodes.\n\nExtra info.\n\nType\n\nTODO\n\nType\n\nDEPRECATED\n\n_property_ next\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.BaseNode.next_node \"Permalink to this definition\")\n\nNext node.\n\n_property_ node\\_id_: str_[\uf0c1](#llama_index.schema.BaseNode.node_id \"Permalink to this definition\")\n\n_property_ parent\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.BaseNode.parent_node \"Permalink to this definition\")\n\nParent node.\n\n_property_ prev\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.BaseNode.prev_node \"Permalink to this definition\")\n\nPrev node.\n\n_property_ ref\\_doc\\_id_: Optional\\[str\\]_[\uf0c1](#llama_index.schema.BaseNode.ref_doc_id \"Permalink to this definition\")\n\nGet ref doc id.\n\nType\n\nDeprecated\n\n_property_ source\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.BaseNode.source_node \"Permalink to this definition\")\n\nSource object node.\n\nExtracted from the relationships field.\n\n_pydantic model_ llama\\_index.schema.Document[\uf0c1](#llama_index.schema.Document \"Permalink to this definition\")\n\nGeneric interface for a data document.\n\nThis document connects to data sources.\n\nShow JSON schema\n\n{\n   \"title\": \"Document\",\n   \"description\": \"Generic interface for a data document.\\\\n\\\\nThis document connects to data sources.\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"doc\\_id\": {\n         \"title\": \"Doc Id\",\n         \"description\": \"Unique ID of the node.\",\n         \"type\": \"string\"\n      },\n      \"embedding\": {\n         \"title\": \"Embedding\",\n         \"description\": \"Embedding of the node.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"number\"\n         }\n      },\n      \"extra\\_info\": {\n         \"title\": \"Extra Info\",\n         \"description\": \"A flat dictionary of metadata fields\",\n         \"type\": \"object\"\n      },\n      \"excluded\\_embed\\_metadata\\_keys\": {\n         \"title\": \"Excluded Embed Metadata Keys\",\n         \"description\": \"Metadata keys that are excluded from text for the embed model.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"string\"\n         }\n      },\n      \"excluded\\_llm\\_metadata\\_keys\": {\n         \"title\": \"Excluded Llm Metadata Keys\",\n         \"description\": \"Metadata keys that are excluded from text for the LLM.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"string\"\n         }\n      },\n      \"relationships\": {\n         \"title\": \"Relationships\",\n         \"description\": \"A mapping of relationships to other node information.\",\n         \"type\": \"object\",\n         \"additionalProperties\": {\n            \"anyOf\": \\[\n               {\n                  \"$ref\": \"#/definitions/RelatedNodeInfo\"\n               },\n               {\n                  \"type\": \"array\",\n                  \"items\": {\n                     \"$ref\": \"#/definitions/RelatedNodeInfo\"\n                  }\n               }\n            \\]\n         }\n      },\n      \"hash\": {\n         \"title\": \"Hash\",\n         \"description\": \"Hash of the node content.\",\n         \"default\": \"\",\n         \"type\": \"string\"\n      },\n      \"text\": {\n         \"title\": \"Text\",\n         \"description\": \"Text content of the node.\",\n         \"default\": \"\",\n         \"type\": \"string\"\n      },\n      \"start\\_char\\_idx\": {\n         \"title\": \"Start Char Idx\",\n         \"description\": \"Start char index of the node.\",\n         \"type\": \"integer\"\n      },\n      \"end\\_char\\_idx\": {\n         \"title\": \"End Char Idx\",\n         \"description\": \"End char index of the node.\",\n         \"type\": \"integer\"\n      },\n      \"text\\_template\": {\n         \"title\": \"Text Template\",\n         \"description\": \"Template for how text is formatted, with {content} and {metadata\\_str} placeholders.\",\n         \"default\": \"{metadata\\_str}\\\\n\\\\n{content}\",\n         \"type\": \"string\"\n      },\n      \"metadata\\_template\": {\n         \"title\": \"Metadata Template\",\n         \"description\": \"Template for how metadata is formatted, with {key} and {value} placeholders.\",\n         \"default\": \"{key}: {value}\",\n         \"type\": \"string\"\n      },\n      \"metadata\\_seperator\": {\n         \"title\": \"Metadata Seperator\",\n         \"description\": \"Separator between metadata fields when converting to string.\",\n         \"default\": \"\\\\n\",\n         \"type\": \"string\"\n      }\n   },\n   \"definitions\": {\n      \"ObjectType\": {\n         \"title\": \"ObjectType\",\n         \"description\": \"An enumeration.\",\n         \"enum\": \\[\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\"\n         \\],\n         \"type\": \"string\"\n      },\n      \"RelatedNodeInfo\": {\n         \"title\": \"RelatedNodeInfo\",\n         \"description\": \"Base component object to capture class names.\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"node\\_id\": {\n               \"title\": \"Node Id\",\n               \"type\": \"string\"\n            },\n            \"node\\_type\": {\n               \"$ref\": \"#/definitions/ObjectType\"\n            },\n            \"metadata\": {\n               \"title\": \"Metadata\",\n               \"type\": \"object\"\n            },\n            \"hash\": {\n               \"title\": \"Hash\",\n               \"type\": \"string\"\n            }\n         },\n         \"required\": \\[\n            \"node\\_id\"\n         \\]\n      }\n   }\n}\n\nConfig\n\n*   **allow\\_population\\_by\\_field\\_name**: _bool = True_\n    \n\nFields\n\n*   [`embedding (Optional[List[float]])`](#llama_index.schema.Document.embedding \"llama_index.schema.Document.embedding\")\n    \n*   [`end_char_idx (Optional[int])`](#llama_index.schema.Document.end_char_idx \"llama_index.schema.Document.end_char_idx\")\n    \n*   [`excluded_embed_metadata_keys (List[str])`](#llama_index.schema.Document.excluded_embed_metadata_keys \"llama_index.schema.Document.excluded_embed_metadata_keys\")\n    \n*   [`excluded_llm_metadata_keys (List[str])`](#llama_index.schema.Document.excluded_llm_metadata_keys \"llama_index.schema.Document.excluded_llm_metadata_keys\")\n    \n*   [`hash (str)`](#llama_index.schema.Document.hash \"llama_index.schema.Document.hash\")\n    \n*   [`id_ (str)`](#llama_index.schema.Document.id_ \"llama_index.schema.Document.id_\")\n    \n*   [`metadata (Dict[str, Any])`](#llama_index.schema.Document.metadata \"llama_index.schema.Document.metadata\")\n    \n*   [`metadata_seperator (str)`](#llama_index.schema.Document.metadata_seperator \"llama_index.schema.Document.metadata_seperator\")\n    \n*   [`metadata_template (str)`](#llama_index.schema.Document.metadata_template \"llama_index.schema.Document.metadata_template\")\n    \n*   [`relationships (Dict[llama_index.schema.NodeRelationship, Union[llama_index.schema.RelatedNodeInfo, List[llama_index.schema.RelatedNodeInfo]]])`](#llama_index.schema.Document.relationships \"llama_index.schema.Document.relationships\")\n    \n*   [`start_char_idx (Optional[int])`](#llama_index.schema.Document.start_char_idx \"llama_index.schema.Document.start_char_idx\")\n    \n*   [`text (str)`](#llama_index.schema.Document.text \"llama_index.schema.Document.text\")\n    \n*   [`text_template (str)`](#llama_index.schema.Document.text_template \"llama_index.schema.Document.text_template\")\n    \n\n_field_ embedding_: Optional\\[List\\[float\\]\\]_ _\\= None_[\uf0c1](#llama_index.schema.Document.embedding \"Permalink to this definition\")\n\n\u201d metadata fields - injected as part of the text shown to LLMs as context - injected as part of the text for generating embeddings - used by vector DBs for metadata filtering\n\nEmbedding of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ end\\_char\\_idx_: Optional\\[int\\]_ _\\= None_[\uf0c1](#llama_index.schema.Document.end_char_idx \"Permalink to this definition\")\n\nEnd char index of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ excluded\\_embed\\_metadata\\_keys_: List\\[str\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.Document.excluded_embed_metadata_keys \"Permalink to this definition\")\n\nMetadata keys that are excluded from text for the embed model.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ excluded\\_llm\\_metadata\\_keys_: List\\[str\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.Document.excluded_llm_metadata_keys \"Permalink to this definition\")\n\nMetadata keys that are excluded from text for the LLM.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ hash_: str_ _\\= ''_[\uf0c1](#llama_index.schema.Document.hash \"Permalink to this definition\")\n\nHash of the node content.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ id\\__: str_ _\\[Optional\\]_ _(alias 'doc\\_id')_[\uf0c1](#llama_index.schema.Document.id_ \"Permalink to this definition\")\n\nUnique ID of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ metadata_: Dict\\[str, Any\\]_ _\\[Optional\\]_ _(alias 'extra\\_info')_[\uf0c1](#llama_index.schema.Document.metadata \"Permalink to this definition\")\n\nA flat dictionary of metadata fields\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ metadata\\_seperator_: str_ _\\= '\\\\n'_[\uf0c1](#llama_index.schema.Document.metadata_seperator \"Permalink to this definition\")\n\nSeparator between metadata fields when converting to string.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ metadata\\_template_: str_ _\\= '{key}: {value}'_[\uf0c1](#llama_index.schema.Document.metadata_template \"Permalink to this definition\")\n\nTemplate for how metadata is formatted, with {key} and {value} placeholders.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ relationships_: Dict\\[[NodeRelationship](#llama_index.schema.NodeRelationship \"llama_index.schema.NodeRelationship\"), Union\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\"), List\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]\\]\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.Document.relationships \"Permalink to this definition\")\n\nA mapping of relationships to other node information.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ start\\_char\\_idx_: Optional\\[int\\]_ _\\= None_[\uf0c1](#llama_index.schema.Document.start_char_idx \"Permalink to this definition\")\n\nStart char index of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ text_: str_ _\\= ''_[\uf0c1](#llama_index.schema.Document.text \"Permalink to this definition\")\n\nText content of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ text\\_template_: str_ _\\= '{metadata\\_str}\\\\n\\\\n{content}'_[\uf0c1](#llama_index.schema.Document.text_template \"Permalink to this definition\")\n\nTemplate for how text is formatted, with {content} and {metadata\\_str} placeholders.\n\nValidated by\n\n*   `_check_hash`\n    \n\nGet node as RelatedNodeInfo.\n\n_classmethod_ class\\_name() \u2192 str[\uf0c1](#llama_index.schema.Document.class_name \"Permalink to this definition\")\n\nGet the class name, used as a unique ID in serialization.\n\nThis provides a key that makes serialization robust against actual class name changes.\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.schema.Document.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.Document.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.Document.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ example() \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.Document.example \"Permalink to this definition\")\n\n_classmethod_ from\\_dict(_data: Dict\\[str, Any\\]_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.Document.from_dict \"Permalink to this definition\")\n\n_classmethod_ from\\_embedchain\\_format(_doc: Dict\\[str, Any\\]_) \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.Document.from_embedchain_format \"Permalink to this definition\")\n\nConvert struct from EmbedChain document format.\n\n_classmethod_ from\\_haystack\\_format(_doc: HaystackDocument_) \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.Document.from_haystack_format \"Permalink to this definition\")\n\nConvert struct from Haystack document format.\n\n_classmethod_ from\\_json(_data\\_str: str_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.Document.from_json \"Permalink to this definition\")\n\n_classmethod_ from\\_langchain\\_format(_doc: LCDocument_) \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.Document.from_langchain_format \"Permalink to this definition\")\n\nConvert struct from LangChain document format.\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.Document.from_orm \"Permalink to this definition\")\n\n_classmethod_ from\\_semantic\\_kernel\\_format(_doc: MemoryRecord_) \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.Document.from_semantic_kernel_format \"Permalink to this definition\")\n\nConvert struct from Semantic Kernel document format.\n\nget\\_content(_metadata\\_mode: [MetadataMode](#llama_index.schema.MetadataMode \"llama_index.schema.MetadataMode\") \\= MetadataMode.NONE_) \u2192 str[\uf0c1](#llama_index.schema.Document.get_content \"Permalink to this definition\")\n\nGet object content.\n\nget\\_doc\\_id() \u2192 str[\uf0c1](#llama_index.schema.Document.get_doc_id \"Permalink to this definition\")\n\nTODO: Deprecated: Get document ID.\n\nget\\_embedding() \u2192 List\\[float\\][\uf0c1](#llama_index.schema.Document.get_embedding \"Permalink to this definition\")\n\nGet embedding.\n\nErrors if embedding is None.\n\nget\\_metadata\\_str(_mode: [MetadataMode](#llama_index.schema.MetadataMode \"llama_index.schema.MetadataMode\") \\= MetadataMode.ALL_) \u2192 str[\uf0c1](#llama_index.schema.Document.get_metadata_str \"Permalink to this definition\")\n\nMetadata info string.\n\nget\\_node\\_info() \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.Document.get_node_info \"Permalink to this definition\")\n\nGet node info.\n\nget\\_text() \u2192 str[\uf0c1](#llama_index.schema.Document.get_text \"Permalink to this definition\")\n\n_classmethod_ get\\_type() \u2192 str[\uf0c1](#llama_index.schema.Document.get_type \"Permalink to this definition\")\n\nGet Document type.\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.Document.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.Document.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.Document.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.Document.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.Document.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.Document.schema_json \"Permalink to this definition\")\n\nset\\_content(_value: str_) \u2192 None[\uf0c1](#llama_index.schema.Document.set_content \"Permalink to this definition\")\n\nSet the content of the node.\n\nto\\_dict(_\\*\\*kwargs: Any_) \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.Document.to_dict \"Permalink to this definition\")\n\nto\\_embedchain\\_format() \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.Document.to_embedchain_format \"Permalink to this definition\")\n\nConvert struct to EmbedChain document format.\n\nto\\_haystack\\_format() \u2192 HaystackDocument[\uf0c1](#llama_index.schema.Document.to_haystack_format \"Permalink to this definition\")\n\nConvert struct to Haystack document format.\n\nto\\_json(_\\*\\*kwargs: Any_) \u2192 str[\uf0c1](#llama_index.schema.Document.to_json \"Permalink to this definition\")\n\nto\\_langchain\\_format() \u2192 LCDocument[\uf0c1](#llama_index.schema.Document.to_langchain_format \"Permalink to this definition\")\n\nConvert struct to LangChain document format.\n\nto\\_semantic\\_kernel\\_format() \u2192 MemoryRecord[\uf0c1](#llama_index.schema.Document.to_semantic_kernel_format \"Permalink to this definition\")\n\nConvert struct to Semantic Kernel document format.\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.schema.Document.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.schema.Document.validate \"Permalink to this definition\")\n\n_property_ child\\_nodes_: Optional\\[List\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]\\]_[\uf0c1](#llama_index.schema.Document.child_nodes \"Permalink to this definition\")\n\nChild nodes.\n\n_property_ doc\\_id_: str_[\uf0c1](#llama_index.schema.Document.doc_id \"Permalink to this definition\")\n\nGet document ID.\n\nExtra info.\n\nType\n\nTODO\n\nType\n\nDEPRECATED\n\n_property_ next\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.Document.next_node \"Permalink to this definition\")\n\nNext node.\n\n_property_ node\\_id_: str_[\uf0c1](#llama_index.schema.Document.node_id \"Permalink to this definition\")\n\n_property_ node\\_info_: Dict\\[str, Any\\]_[\uf0c1](#llama_index.schema.Document.node_info \"Permalink to this definition\")\n\nGet node info.\n\nType\n\nDeprecated\n\n_property_ parent\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.Document.parent_node \"Permalink to this definition\")\n\nParent node.\n\n_property_ prev\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.Document.prev_node \"Permalink to this definition\")\n\nPrev node.\n\n_property_ ref\\_doc\\_id_: Optional\\[str\\]_[\uf0c1](#llama_index.schema.Document.ref_doc_id \"Permalink to this definition\")\n\nGet ref doc id.\n\nType\n\nDeprecated\n\n_property_ source\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.Document.source_node \"Permalink to this definition\")\n\nSource object node.\n\nExtracted from the relationships field.\n\n_pydantic model_ llama\\_index.schema.ImageDocument[\uf0c1](#llama_index.schema.ImageDocument \"Permalink to this definition\")\n\nData document containing an image.\n\nShow JSON schema\n\n{\n   \"title\": \"ImageDocument\",\n   \"description\": \"Data document containing an image.\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"doc\\_id\": {\n         \"title\": \"Doc Id\",\n         \"description\": \"Unique ID of the node.\",\n         \"type\": \"string\"\n      },\n      \"embedding\": {\n         \"title\": \"Embedding\",\n         \"description\": \"Embedding of the node.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"number\"\n         }\n      },\n      \"extra\\_info\": {\n         \"title\": \"Extra Info\",\n         \"description\": \"A flat dictionary of metadata fields\",\n         \"type\": \"object\"\n      },\n      \"excluded\\_embed\\_metadata\\_keys\": {\n         \"title\": \"Excluded Embed Metadata Keys\",\n         \"description\": \"Metadata keys that are excluded from text for the embed model.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"string\"\n         }\n      },\n      \"excluded\\_llm\\_metadata\\_keys\": {\n         \"title\": \"Excluded Llm Metadata Keys\",\n         \"description\": \"Metadata keys that are excluded from text for the LLM.\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"string\"\n         }\n      },\n      \"relationships\": {\n         \"title\": \"Relationships\",\n         \"description\": \"A mapping of relationships to other node information.\",\n         \"type\": \"object\",\n         \"additionalProperties\": {\n            \"anyOf\": \\[\n               {\n                  \"$ref\": \"#/definitions/RelatedNodeInfo\"\n               },\n               {\n                  \"type\": \"array\",\n                  \"items\": {\n                     \"$ref\": \"#/definitions/RelatedNodeInfo\"\n                  }\n               }\n            \\]\n         }\n      },\n      \"hash\": {\n         \"title\": \"Hash\",\n         \"description\": \"Hash of the node content.\",\n         \"default\": \"\",\n         \"type\": \"string\"\n      },\n      \"text\": {\n         \"title\": \"Text\",\n         \"description\": \"Text content of the node.\",\n         \"default\": \"\",\n         \"type\": \"string\"\n      },\n      \"start\\_char\\_idx\": {\n         \"title\": \"Start Char Idx\",\n         \"description\": \"Start char index of the node.\",\n         \"type\": \"integer\"\n      },\n      \"end\\_char\\_idx\": {\n         \"title\": \"End Char Idx\",\n         \"description\": \"End char index of the node.\",\n         \"type\": \"integer\"\n      },\n      \"text\\_template\": {\n         \"title\": \"Text Template\",\n         \"description\": \"Template for how text is formatted, with {content} and {metadata\\_str} placeholders.\",\n         \"default\": \"{metadata\\_str}\\\\n\\\\n{content}\",\n         \"type\": \"string\"\n      },\n      \"metadata\\_template\": {\n         \"title\": \"Metadata Template\",\n         \"description\": \"Template for how metadata is formatted, with {key} and {value} placeholders.\",\n         \"default\": \"{key}: {value}\",\n         \"type\": \"string\"\n      },\n      \"metadata\\_seperator\": {\n         \"title\": \"Metadata Seperator\",\n         \"description\": \"Separator between metadata fields when converting to string.\",\n         \"default\": \"\\\\n\",\n         \"type\": \"string\"\n      },\n      \"image\": {\n         \"title\": \"Image\",\n         \"type\": \"string\"\n      }\n   },\n   \"definitions\": {\n      \"ObjectType\": {\n         \"title\": \"ObjectType\",\n         \"description\": \"An enumeration.\",\n         \"enum\": \\[\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\"\n         \\],\n         \"type\": \"string\"\n      },\n      \"RelatedNodeInfo\": {\n         \"title\": \"RelatedNodeInfo\",\n         \"description\": \"Base component object to capture class names.\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"node\\_id\": {\n               \"title\": \"Node Id\",\n               \"type\": \"string\"\n            },\n            \"node\\_type\": {\n               \"$ref\": \"#/definitions/ObjectType\"\n            },\n            \"metadata\": {\n               \"title\": \"Metadata\",\n               \"type\": \"object\"\n            },\n            \"hash\": {\n               \"title\": \"Hash\",\n               \"type\": \"string\"\n            }\n         },\n         \"required\": \\[\n            \"node\\_id\"\n         \\]\n      }\n   }\n}\n\nConfig\n\n*   **allow\\_population\\_by\\_field\\_name**: _bool = True_\n    \n\nFields\n\n*   [`embedding (Optional[List[float]])`](#llama_index.schema.ImageDocument.embedding \"llama_index.schema.ImageDocument.embedding\")\n    \n*   [`end_char_idx (Optional[int])`](#llama_index.schema.ImageDocument.end_char_idx \"llama_index.schema.ImageDocument.end_char_idx\")\n    \n*   [`excluded_embed_metadata_keys (List[str])`](#llama_index.schema.ImageDocument.excluded_embed_metadata_keys \"llama_index.schema.ImageDocument.excluded_embed_metadata_keys\")\n    \n*   [`excluded_llm_metadata_keys (List[str])`](#llama_index.schema.ImageDocument.excluded_llm_metadata_keys \"llama_index.schema.ImageDocument.excluded_llm_metadata_keys\")\n    \n*   [`hash (str)`](#llama_index.schema.ImageDocument.hash \"llama_index.schema.ImageDocument.hash\")\n    \n*   [`id_ (str)`](#llama_index.schema.ImageDocument.id_ \"llama_index.schema.ImageDocument.id_\")\n    \n*   [`image (Optional[str])`](#llama_index.schema.ImageDocument.image \"llama_index.schema.ImageDocument.image\")\n    \n*   [`metadata (Dict[str, Any])`](#llama_index.schema.ImageDocument.metadata \"llama_index.schema.ImageDocument.metadata\")\n    \n*   [`metadata_seperator (str)`](#llama_index.schema.ImageDocument.metadata_seperator \"llama_index.schema.ImageDocument.metadata_seperator\")\n    \n*   [`metadata_template (str)`](#llama_index.schema.ImageDocument.metadata_template \"llama_index.schema.ImageDocument.metadata_template\")\n    \n*   [`relationships (Dict[llama_index.schema.NodeRelationship, Union[llama_index.schema.RelatedNodeInfo, List[llama_index.schema.RelatedNodeInfo]]])`](#llama_index.schema.ImageDocument.relationships \"llama_index.schema.ImageDocument.relationships\")\n    \n*   [`start_char_idx (Optional[int])`](#llama_index.schema.ImageDocument.start_char_idx \"llama_index.schema.ImageDocument.start_char_idx\")\n    \n*   [`text (str)`](#llama_index.schema.ImageDocument.text \"llama_index.schema.ImageDocument.text\")\n    \n*   [`text_template (str)`](#llama_index.schema.ImageDocument.text_template \"llama_index.schema.ImageDocument.text_template\")\n    \n\n_field_ embedding_: Optional\\[List\\[float\\]\\]_ _\\= None_[\uf0c1](#llama_index.schema.ImageDocument.embedding \"Permalink to this definition\")\n\n\u201d metadata fields - injected as part of the text shown to LLMs as context - injected as part of the text for generating embeddings - used by vector DBs for metadata filtering\n\nEmbedding of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ end\\_char\\_idx_: Optional\\[int\\]_ _\\= None_[\uf0c1](#llama_index.schema.ImageDocument.end_char_idx \"Permalink to this definition\")\n\nEnd char index of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ excluded\\_embed\\_metadata\\_keys_: List\\[str\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.ImageDocument.excluded_embed_metadata_keys \"Permalink to this definition\")\n\nMetadata keys that are excluded from text for the embed model.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ excluded\\_llm\\_metadata\\_keys_: List\\[str\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.ImageDocument.excluded_llm_metadata_keys \"Permalink to this definition\")\n\nMetadata keys that are excluded from text for the LLM.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ hash_: str_ _\\= ''_[\uf0c1](#llama_index.schema.ImageDocument.hash \"Permalink to this definition\")\n\nHash of the node content.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ id\\__: str_ _\\[Optional\\]_ _(alias 'doc\\_id')_[\uf0c1](#llama_index.schema.ImageDocument.id_ \"Permalink to this definition\")\n\nUnique ID of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ image_: Optional\\[str\\]_ _\\= None_[\uf0c1](#llama_index.schema.ImageDocument.image \"Permalink to this definition\")\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ metadata_: Dict\\[str, Any\\]_ _\\[Optional\\]_ _(alias 'extra\\_info')_[\uf0c1](#llama_index.schema.ImageDocument.metadata \"Permalink to this definition\")\n\nA flat dictionary of metadata fields\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ metadata\\_seperator_: str_ _\\= '\\\\n'_[\uf0c1](#llama_index.schema.ImageDocument.metadata_seperator \"Permalink to this definition\")\n\nSeparator between metadata fields when converting to string.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ metadata\\_template_: str_ _\\= '{key}: {value}'_[\uf0c1](#llama_index.schema.ImageDocument.metadata_template \"Permalink to this definition\")\n\nTemplate for how metadata is formatted, with {key} and {value} placeholders.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ relationships_: Dict\\[[NodeRelationship](#llama_index.schema.NodeRelationship \"llama_index.schema.NodeRelationship\"), Union\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\"), List\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]\\]\\]_ _\\[Optional\\]_[\uf0c1](#llama_index.schema.ImageDocument.relationships \"Permalink to this definition\")\n\nA mapping of relationships to other node information.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ start\\_char\\_idx_: Optional\\[int\\]_ _\\= None_[\uf0c1](#llama_index.schema.ImageDocument.start_char_idx \"Permalink to this definition\")\n\nStart char index of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ text_: str_ _\\= ''_[\uf0c1](#llama_index.schema.ImageDocument.text \"Permalink to this definition\")\n\nText content of the node.\n\nValidated by\n\n*   `_check_hash`\n    \n\n_field_ text\\_template_: str_ _\\= '{metadata\\_str}\\\\n\\\\n{content}'_[\uf0c1](#llama_index.schema.ImageDocument.text_template \"Permalink to this definition\")\n\nTemplate for how text is formatted, with {content} and {metadata\\_str} placeholders.\n\nValidated by\n\n*   `_check_hash`\n    \n\nGet node as RelatedNodeInfo.\n\n_classmethod_ class\\_name() \u2192 str[\uf0c1](#llama_index.schema.ImageDocument.class_name \"Permalink to this definition\")\n\nGet the class name, used as a unique ID in serialization.\n\nThis provides a key that makes serialization robust against actual class name changes.\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.schema.ImageDocument.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.ImageDocument.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.ImageDocument.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ example() \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.ImageDocument.example \"Permalink to this definition\")\n\n_classmethod_ from\\_dict(_data: Dict\\[str, Any\\]_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.ImageDocument.from_dict \"Permalink to this definition\")\n\n_classmethod_ from\\_embedchain\\_format(_doc: Dict\\[str, Any\\]_) \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.ImageDocument.from_embedchain_format \"Permalink to this definition\")\n\nConvert struct from EmbedChain document format.\n\n_classmethod_ from\\_haystack\\_format(_doc: HaystackDocument_) \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.ImageDocument.from_haystack_format \"Permalink to this definition\")\n\nConvert struct from Haystack document format.\n\n_classmethod_ from\\_json(_data\\_str: str_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.ImageDocument.from_json \"Permalink to this definition\")\n\n_classmethod_ from\\_langchain\\_format(_doc: LCDocument_) \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.ImageDocument.from_langchain_format \"Permalink to this definition\")\n\nConvert struct from LangChain document format.\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.ImageDocument.from_orm \"Permalink to this definition\")\n\n_classmethod_ from\\_semantic\\_kernel\\_format(_doc: MemoryRecord_) \u2192 [Document](#llama_index.schema.Document \"llama_index.schema.Document\")[\uf0c1](#llama_index.schema.ImageDocument.from_semantic_kernel_format \"Permalink to this definition\")\n\nConvert struct from Semantic Kernel document format.\n\nget\\_content(_metadata\\_mode: [MetadataMode](#llama_index.schema.MetadataMode \"llama_index.schema.MetadataMode\") \\= MetadataMode.NONE_) \u2192 str[\uf0c1](#llama_index.schema.ImageDocument.get_content \"Permalink to this definition\")\n\nGet object content.\n\nget\\_doc\\_id() \u2192 str[\uf0c1](#llama_index.schema.ImageDocument.get_doc_id \"Permalink to this definition\")\n\nTODO: Deprecated: Get document ID.\n\nget\\_embedding() \u2192 List\\[float\\][\uf0c1](#llama_index.schema.ImageDocument.get_embedding \"Permalink to this definition\")\n\nGet embedding.\n\nErrors if embedding is None.\n\nget\\_metadata\\_str(_mode: [MetadataMode](#llama_index.schema.MetadataMode \"llama_index.schema.MetadataMode\") \\= MetadataMode.ALL_) \u2192 str[\uf0c1](#llama_index.schema.ImageDocument.get_metadata_str \"Permalink to this definition\")\n\nMetadata info string.\n\nget\\_node\\_info() \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.ImageDocument.get_node_info \"Permalink to this definition\")\n\nGet node info.\n\nget\\_text() \u2192 str[\uf0c1](#llama_index.schema.ImageDocument.get_text \"Permalink to this definition\")\n\n_classmethod_ get\\_type() \u2192 str[\uf0c1](#llama_index.schema.ImageDocument.get_type \"Permalink to this definition\")\n\nGet Document type.\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.ImageDocument.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.ImageDocument.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.ImageDocument.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.ImageDocument.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.ImageDocument.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.ImageDocument.schema_json \"Permalink to this definition\")\n\nset\\_content(_value: str_) \u2192 None[\uf0c1](#llama_index.schema.ImageDocument.set_content \"Permalink to this definition\")\n\nSet the content of the node.\n\nto\\_dict(_\\*\\*kwargs: Any_) \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.ImageDocument.to_dict \"Permalink to this definition\")\n\nto\\_embedchain\\_format() \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.ImageDocument.to_embedchain_format \"Permalink to this definition\")\n\nConvert struct to EmbedChain document format.\n\nto\\_haystack\\_format() \u2192 HaystackDocument[\uf0c1](#llama_index.schema.ImageDocument.to_haystack_format \"Permalink to this definition\")\n\nConvert struct to Haystack document format.\n\nto\\_json(_\\*\\*kwargs: Any_) \u2192 str[\uf0c1](#llama_index.schema.ImageDocument.to_json \"Permalink to this definition\")\n\nto\\_langchain\\_format() \u2192 LCDocument[\uf0c1](#llama_index.schema.ImageDocument.to_langchain_format \"Permalink to this definition\")\n\nConvert struct to LangChain document format.\n\nto\\_semantic\\_kernel\\_format() \u2192 MemoryRecord[\uf0c1](#llama_index.schema.ImageDocument.to_semantic_kernel_format \"Permalink to this definition\")\n\nConvert struct to Semantic Kernel document format.\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.schema.ImageDocument.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.schema.ImageDocument.validate \"Permalink to this definition\")\n\n_property_ child\\_nodes_: Optional\\[List\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]\\]_[\uf0c1](#llama_index.schema.ImageDocument.child_nodes \"Permalink to this definition\")\n\nChild nodes.\n\n_property_ doc\\_id_: str_[\uf0c1](#llama_index.schema.ImageDocument.doc_id \"Permalink to this definition\")\n\nGet document ID.\n\nExtra info.\n\nType\n\nTODO\n\nType\n\nDEPRECATED\n\n_property_ next\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.ImageDocument.next_node \"Permalink to this definition\")\n\nNext node.\n\n_property_ node\\_id_: str_[\uf0c1](#llama_index.schema.ImageDocument.node_id \"Permalink to this definition\")\n\n_property_ node\\_info_: Dict\\[str, Any\\]_[\uf0c1](#llama_index.schema.ImageDocument.node_info \"Permalink to this definition\")\n\nGet node info.\n\nType\n\nDeprecated\n\n_property_ parent\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.ImageDocument.parent_node \"Permalink to this definition\")\n\nParent node.\n\n_property_ prev\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.ImageDocument.prev_node \"Permalink to this definition\")\n\nPrev node.\n\n_property_ ref\\_doc\\_id_: Optional\\[str\\]_[\uf0c1](#llama_index.schema.ImageDocument.ref_doc_id \"Permalink to this definition\")\n\nGet ref doc id.\n\nType\n\nDeprecated\n\n_property_ source\\_node_: Optional\\[[RelatedNodeInfo](#llama_index.schema.RelatedNodeInfo \"llama_index.schema.RelatedNodeInfo\")\\]_[\uf0c1](#llama_index.schema.ImageDocument.source_node \"Permalink to this definition\")\n\nSource object node.\n\nExtracted from the relationships field.\n\n_class_ llama\\_index.schema.MetadataMode(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\uf0c1](#llama_index.schema.MetadataMode \"Permalink to this definition\")\n\ncapitalize()[\uf0c1](#llama_index.schema.MetadataMode.capitalize \"Permalink to this definition\")\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower case.\n\ncasefold()[\uf0c1](#llama_index.schema.MetadataMode.casefold \"Permalink to this definition\")\n\nReturn a version of the string suitable for caseless comparisons.\n\ncenter(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.center \"Permalink to this definition\")\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\ncount(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.MetadataMode.count \"Permalink to this definition\")\n\nReturn the number of non-overlapping occurrences of substring sub in string S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nencode(_encoding\\='utf-8'_, _errors\\='strict'_)[\uf0c1](#llama_index.schema.MetadataMode.encode \"Permalink to this definition\")\n\nEncode the string using the codec registered for encoding.\n\nencoding\n\nThe encoding in which to encode the string.\n\nerrors\n\nThe error handling scheme to use for encoding errors. The default is \u2018strict\u2019 meaning that encoding errors raise a UnicodeEncodeError. Other possible values are \u2018ignore\u2019, \u2018replace\u2019 and \u2018xmlcharrefreplace\u2019 as well as any other name registered with codecs.register\\_error that can handle UnicodeEncodeErrors.\n\nendswith(_suffix_\\[, _start_\\[, _end_\\]\\]) \u2192 bool[\uf0c1](#llama_index.schema.MetadataMode.endswith \"Permalink to this definition\")\n\nReturn True if S ends with the specified suffix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. suffix can also be a tuple of strings to try.\n\nexpandtabs(_tabsize\\=8_)[\uf0c1](#llama_index.schema.MetadataMode.expandtabs \"Permalink to this definition\")\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed.\n\nfind(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.MetadataMode.find \"Permalink to this definition\")\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\nformat(_\\*args_, _\\*\\*kwargs_) \u2192 str[\uf0c1](#llama_index.schema.MetadataMode.format \"Permalink to this definition\")\n\nReturn a formatted version of S, using substitutions from args and kwargs. The substitutions are identified by braces (\u2018{\u2018 and \u2018}\u2019).\n\nformat\\_map(_mapping_) \u2192 str[\uf0c1](#llama_index.schema.MetadataMode.format_map \"Permalink to this definition\")\n\nReturn a formatted version of S, using substitutions from mapping. The substitutions are identified by braces (\u2018{\u2018 and \u2018}\u2019).\n\nindex(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.MetadataMode.index \"Permalink to this definition\")\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\nisalnum()[\uf0c1](#llama_index.schema.MetadataMode.isalnum \"Permalink to this definition\")\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.\n\nisalpha()[\uf0c1](#llama_index.schema.MetadataMode.isalpha \"Permalink to this definition\")\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.\n\nisascii()[\uf0c1](#llama_index.schema.MetadataMode.isascii \"Permalink to this definition\")\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.\n\nisdecimal()[\uf0c1](#llama_index.schema.MetadataMode.isdecimal \"Permalink to this definition\")\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and there is at least one character in the string.\n\nisdigit()[\uf0c1](#llama_index.schema.MetadataMode.isdigit \"Permalink to this definition\")\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there is at least one character in the string.\n\nisidentifier()[\uf0c1](#llama_index.schema.MetadataMode.isidentifier \"Permalink to this definition\")\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \u201cdef\u201d or \u201cclass\u201d.\n\nislower()[\uf0c1](#llama_index.schema.MetadataMode.islower \"Permalink to this definition\")\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.\n\nisnumeric()[\uf0c1](#llama_index.schema.MetadataMode.isnumeric \"Permalink to this definition\")\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at least one character in the string.\n\nisprintable()[\uf0c1](#llama_index.schema.MetadataMode.isprintable \"Permalink to this definition\")\n\nReturn True if the string is printable, False otherwise.\n\nA string is printable if all of its characters are considered printable in repr() or if it is empty.\n\nisspace()[\uf0c1](#llama_index.schema.MetadataMode.isspace \"Permalink to this definition\")\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there is at least one character in the string.\n\nistitle()[\uf0c1](#llama_index.schema.MetadataMode.istitle \"Permalink to this definition\")\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.\n\nisupper()[\uf0c1](#llama_index.schema.MetadataMode.isupper \"Permalink to this definition\")\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.\n\njoin(_iterable_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.join \"Permalink to this definition\")\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string. The result is returned as a new string.\n\nExample: \u2018.\u2019.join(\\[\u2018ab\u2019, \u2018pq\u2019, \u2018rs\u2019\\]) -> \u2018ab.pq.rs\u2019\n\nljust(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.ljust \"Permalink to this definition\")\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\nlower()[\uf0c1](#llama_index.schema.MetadataMode.lower \"Permalink to this definition\")\n\nReturn a copy of the string converted to lowercase.\n\nlstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.lstrip \"Permalink to this definition\")\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n_static_ maketrans()[\uf0c1](#llama_index.schema.MetadataMode.maketrans \"Permalink to this definition\")\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.\n\npartition(_sep_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.partition \"Permalink to this definition\")\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string and two empty strings.\n\nremoveprefix(_prefix_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.removeprefix \"Permalink to this definition\")\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string\\[len(prefix):\\]. Otherwise, return a copy of the original string.\n\nremovesuffix(_suffix_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.removesuffix \"Permalink to this definition\")\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty, return string\\[:-len(suffix)\\]. Otherwise, return a copy of the original string.\n\nreplace(_old_, _new_, _count\\=\\-1_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.replace \"Permalink to this definition\")\n\nReturn a copy with all occurrences of substring old replaced by new.\n\n> count\n> \n> Maximum number of occurrences to replace. -1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are replaced.\n\nrfind(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.MetadataMode.rfind \"Permalink to this definition\")\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\nrindex(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.MetadataMode.rindex \"Permalink to this definition\")\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\nrjust(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.rjust \"Permalink to this definition\")\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\nrpartition(_sep_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.rpartition \"Permalink to this definition\")\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings and the original string.\n\nrsplit(_sep\\=None_, _maxsplit\\=\\-1_)[\uf0c1](#llama_index.schema.MetadataMode.rsplit \"Permalink to this definition\")\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n> sep\n> \n> The separator used to split the string.\n> \n> When set to None (the default value), will split on any whitespace character (including n r t f and spaces) and will discard empty strings from the result.\n> \n> maxsplit\n> \n> Maximum number of splits (starting from the left). -1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front.\n\nrstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.rstrip \"Permalink to this definition\")\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\nsplit(_sep\\=None_, _maxsplit\\=\\-1_)[\uf0c1](#llama_index.schema.MetadataMode.split \"Permalink to this definition\")\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n> sep\n> \n> The separator used to split the string.\n> \n> When set to None (the default value), will split on any whitespace character (including n r t f and spaces) and will discard empty strings from the result.\n> \n> maxsplit\n> \n> Maximum number of splits (starting from the left). -1 (the default value) means no limit.\n\nNote, str.split() is mainly useful for data that has been intentionally delimited. With natural text that includes punctuation, consider using the regular expression module.\n\nsplitlines(_keepends\\=False_)[\uf0c1](#llama_index.schema.MetadataMode.splitlines \"Permalink to this definition\")\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and true.\n\nstartswith(_prefix_\\[, _start_\\[, _end_\\]\\]) \u2192 bool[\uf0c1](#llama_index.schema.MetadataMode.startswith \"Permalink to this definition\")\n\nReturn True if S starts with the specified prefix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. prefix can also be a tuple of strings to try.\n\nstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.strip \"Permalink to this definition\")\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\nswapcase()[\uf0c1](#llama_index.schema.MetadataMode.swapcase \"Permalink to this definition\")\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\n\ntitle()[\uf0c1](#llama_index.schema.MetadataMode.title \"Permalink to this definition\")\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining cased characters have lower case.\n\ntranslate(_table_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.translate \"Permalink to this definition\")\n\nReplace each character in the string using the given translation table.\n\n> table\n> \n> Translation table, which must be a mapping of Unicode ordinals to Unicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via \\_\\_getitem\\_\\_, for instance a dictionary or list. If this operation raises LookupError, the character is left untouched. Characters mapped to None are deleted.\n\nupper()[\uf0c1](#llama_index.schema.MetadataMode.upper \"Permalink to this definition\")\n\nReturn a copy of the string converted to uppercase.\n\nzfill(_width_, _/_)[\uf0c1](#llama_index.schema.MetadataMode.zfill \"Permalink to this definition\")\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated.\n\nllama\\_index.schema.Node[\uf0c1](#llama_index.schema.Node \"Permalink to this definition\")\n\nalias of `TextNode`\n\n_class_ llama\\_index.schema.NodeRelationship(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\uf0c1](#llama_index.schema.NodeRelationship \"Permalink to this definition\")\n\nNode relationships used in BaseNode class.\n\nSOURCE[\uf0c1](#llama_index.schema.NodeRelationship.SOURCE \"Permalink to this definition\")\n\nThe node is the source document.\n\nPREVIOUS[\uf0c1](#llama_index.schema.NodeRelationship.PREVIOUS \"Permalink to this definition\")\n\nThe node is the previous node in the document.\n\nNEXT[\uf0c1](#llama_index.schema.NodeRelationship.NEXT \"Permalink to this definition\")\n\nThe node is the next node in the document.\n\nPARENT[\uf0c1](#llama_index.schema.NodeRelationship.PARENT \"Permalink to this definition\")\n\nThe node is the parent node in the document.\n\nCHILD[\uf0c1](#llama_index.schema.NodeRelationship.CHILD \"Permalink to this definition\")\n\nThe node is a child node in the document.\n\ncapitalize()[\uf0c1](#llama_index.schema.NodeRelationship.capitalize \"Permalink to this definition\")\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower case.\n\ncasefold()[\uf0c1](#llama_index.schema.NodeRelationship.casefold \"Permalink to this definition\")\n\nReturn a version of the string suitable for caseless comparisons.\n\ncenter(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.center \"Permalink to this definition\")\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\ncount(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.NodeRelationship.count \"Permalink to this definition\")\n\nReturn the number of non-overlapping occurrences of substring sub in string S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nencode(_encoding\\='utf-8'_, _errors\\='strict'_)[\uf0c1](#llama_index.schema.NodeRelationship.encode \"Permalink to this definition\")\n\nEncode the string using the codec registered for encoding.\n\nencoding\n\nThe encoding in which to encode the string.\n\nerrors\n\nThe error handling scheme to use for encoding errors. The default is \u2018strict\u2019 meaning that encoding errors raise a UnicodeEncodeError. Other possible values are \u2018ignore\u2019, \u2018replace\u2019 and \u2018xmlcharrefreplace\u2019 as well as any other name registered with codecs.register\\_error that can handle UnicodeEncodeErrors.\n\nendswith(_suffix_\\[, _start_\\[, _end_\\]\\]) \u2192 bool[\uf0c1](#llama_index.schema.NodeRelationship.endswith \"Permalink to this definition\")\n\nReturn True if S ends with the specified suffix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. suffix can also be a tuple of strings to try.\n\nexpandtabs(_tabsize\\=8_)[\uf0c1](#llama_index.schema.NodeRelationship.expandtabs \"Permalink to this definition\")\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed.\n\nfind(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.NodeRelationship.find \"Permalink to this definition\")\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\nformat(_\\*args_, _\\*\\*kwargs_) \u2192 str[\uf0c1](#llama_index.schema.NodeRelationship.format \"Permalink to this definition\")\n\nReturn a formatted version of S, using substitutions from args and kwargs. The substitutions are identified by braces (\u2018{\u2018 and \u2018}\u2019).\n\nformat\\_map(_mapping_) \u2192 str[\uf0c1](#llama_index.schema.NodeRelationship.format_map \"Permalink to this definition\")\n\nReturn a formatted version of S, using substitutions from mapping. The substitutions are identified by braces (\u2018{\u2018 and \u2018}\u2019).\n\nindex(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.NodeRelationship.index \"Permalink to this definition\")\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\nisalnum()[\uf0c1](#llama_index.schema.NodeRelationship.isalnum \"Permalink to this definition\")\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.\n\nisalpha()[\uf0c1](#llama_index.schema.NodeRelationship.isalpha \"Permalink to this definition\")\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.\n\nisascii()[\uf0c1](#llama_index.schema.NodeRelationship.isascii \"Permalink to this definition\")\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.\n\nisdecimal()[\uf0c1](#llama_index.schema.NodeRelationship.isdecimal \"Permalink to this definition\")\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and there is at least one character in the string.\n\nisdigit()[\uf0c1](#llama_index.schema.NodeRelationship.isdigit \"Permalink to this definition\")\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there is at least one character in the string.\n\nisidentifier()[\uf0c1](#llama_index.schema.NodeRelationship.isidentifier \"Permalink to this definition\")\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \u201cdef\u201d or \u201cclass\u201d.\n\nislower()[\uf0c1](#llama_index.schema.NodeRelationship.islower \"Permalink to this definition\")\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.\n\nisnumeric()[\uf0c1](#llama_index.schema.NodeRelationship.isnumeric \"Permalink to this definition\")\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at least one character in the string.\n\nisprintable()[\uf0c1](#llama_index.schema.NodeRelationship.isprintable \"Permalink to this definition\")\n\nReturn True if the string is printable, False otherwise.\n\nA string is printable if all of its characters are considered printable in repr() or if it is empty.\n\nisspace()[\uf0c1](#llama_index.schema.NodeRelationship.isspace \"Permalink to this definition\")\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there is at least one character in the string.\n\nistitle()[\uf0c1](#llama_index.schema.NodeRelationship.istitle \"Permalink to this definition\")\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.\n\nisupper()[\uf0c1](#llama_index.schema.NodeRelationship.isupper \"Permalink to this definition\")\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.\n\njoin(_iterable_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.join \"Permalink to this definition\")\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string. The result is returned as a new string.\n\nExample: \u2018.\u2019.join(\\[\u2018ab\u2019, \u2018pq\u2019, \u2018rs\u2019\\]) -> \u2018ab.pq.rs\u2019\n\nljust(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.ljust \"Permalink to this definition\")\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\nlower()[\uf0c1](#llama_index.schema.NodeRelationship.lower \"Permalink to this definition\")\n\nReturn a copy of the string converted to lowercase.\n\nlstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.lstrip \"Permalink to this definition\")\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n_static_ maketrans()[\uf0c1](#llama_index.schema.NodeRelationship.maketrans \"Permalink to this definition\")\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.\n\npartition(_sep_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.partition \"Permalink to this definition\")\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string and two empty strings.\n\nremoveprefix(_prefix_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.removeprefix \"Permalink to this definition\")\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string\\[len(prefix):\\]. Otherwise, return a copy of the original string.\n\nremovesuffix(_suffix_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.removesuffix \"Permalink to this definition\")\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty, return string\\[:-len(suffix)\\]. Otherwise, return a copy of the original string.\n\nreplace(_old_, _new_, _count\\=\\-1_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.replace \"Permalink to this definition\")\n\nReturn a copy with all occurrences of substring old replaced by new.\n\n> count\n> \n> Maximum number of occurrences to replace. -1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are replaced.\n\nrfind(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.NodeRelationship.rfind \"Permalink to this definition\")\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\nrindex(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.NodeRelationship.rindex \"Permalink to this definition\")\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\nrjust(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.rjust \"Permalink to this definition\")\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\nrpartition(_sep_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.rpartition \"Permalink to this definition\")\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings and the original string.\n\nrsplit(_sep\\=None_, _maxsplit\\=\\-1_)[\uf0c1](#llama_index.schema.NodeRelationship.rsplit \"Permalink to this definition\")\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n> sep\n> \n> The separator used to split the string.\n> \n> When set to None (the default value), will split on any whitespace character (including n r t f and spaces) and will discard empty strings from the result.\n> \n> maxsplit\n> \n> Maximum number of splits (starting from the left). -1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front.\n\nrstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.rstrip \"Permalink to this definition\")\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\nsplit(_sep\\=None_, _maxsplit\\=\\-1_)[\uf0c1](#llama_index.schema.NodeRelationship.split \"Permalink to this definition\")\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n> sep\n> \n> The separator used to split the string.\n> \n> When set to None (the default value), will split on any whitespace character (including n r t f and spaces) and will discard empty strings from the result.\n> \n> maxsplit\n> \n> Maximum number of splits (starting from the left). -1 (the default value) means no limit.\n\nNote, str.split() is mainly useful for data that has been intentionally delimited. With natural text that includes punctuation, consider using the regular expression module.\n\nsplitlines(_keepends\\=False_)[\uf0c1](#llama_index.schema.NodeRelationship.splitlines \"Permalink to this definition\")\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and true.\n\nstartswith(_prefix_\\[, _start_\\[, _end_\\]\\]) \u2192 bool[\uf0c1](#llama_index.schema.NodeRelationship.startswith \"Permalink to this definition\")\n\nReturn True if S starts with the specified prefix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. prefix can also be a tuple of strings to try.\n\nstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.strip \"Permalink to this definition\")\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\nswapcase()[\uf0c1](#llama_index.schema.NodeRelationship.swapcase \"Permalink to this definition\")\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\n\ntitle()[\uf0c1](#llama_index.schema.NodeRelationship.title \"Permalink to this definition\")\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining cased characters have lower case.\n\ntranslate(_table_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.translate \"Permalink to this definition\")\n\nReplace each character in the string using the given translation table.\n\n> table\n> \n> Translation table, which must be a mapping of Unicode ordinals to Unicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via \\_\\_getitem\\_\\_, for instance a dictionary or list. If this operation raises LookupError, the character is left untouched. Characters mapped to None are deleted.\n\nupper()[\uf0c1](#llama_index.schema.NodeRelationship.upper \"Permalink to this definition\")\n\nReturn a copy of the string converted to uppercase.\n\nzfill(_width_, _/_)[\uf0c1](#llama_index.schema.NodeRelationship.zfill \"Permalink to this definition\")\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated.\n\n_pydantic model_ llama\\_index.schema.NodeWithScore[\uf0c1](#llama_index.schema.NodeWithScore \"Permalink to this definition\")\n\nShow JSON schema\n\n{\n   \"title\": \"NodeWithScore\",\n   \"description\": \"Base component object to capture class names.\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"node\": {\n         \"$ref\": \"#/definitions/BaseNode\"\n      },\n      \"score\": {\n         \"title\": \"Score\",\n         \"type\": \"number\"\n      }\n   },\n   \"required\": \\[\n      \"node\"\n   \\],\n   \"definitions\": {\n      \"ObjectType\": {\n         \"title\": \"ObjectType\",\n         \"description\": \"An enumeration.\",\n         \"enum\": \\[\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\"\n         \\],\n         \"type\": \"string\"\n      },\n      \"RelatedNodeInfo\": {\n         \"title\": \"RelatedNodeInfo\",\n         \"description\": \"Base component object to capture class names.\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"node\\_id\": {\n               \"title\": \"Node Id\",\n               \"type\": \"string\"\n            },\n            \"node\\_type\": {\n               \"$ref\": \"#/definitions/ObjectType\"\n            },\n            \"metadata\": {\n               \"title\": \"Metadata\",\n               \"type\": \"object\"\n            },\n            \"hash\": {\n               \"title\": \"Hash\",\n               \"type\": \"string\"\n            }\n         },\n         \"required\": \\[\n            \"node\\_id\"\n         \\]\n      },\n      \"BaseNode\": {\n         \"title\": \"BaseNode\",\n         \"description\": \"Base node Object.\\\\n\\\\nGeneric abstract interface for retrievable nodes\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"id\\_\": {\n               \"title\": \"Id \",\n               \"description\": \"Unique ID of the node.\",\n               \"type\": \"string\"\n            },\n            \"embedding\": {\n               \"title\": \"Embedding\",\n               \"description\": \"Embedding of the node.\",\n               \"type\": \"array\",\n               \"items\": {\n                  \"type\": \"number\"\n               }\n            },\n            \"extra\\_info\": {\n               \"title\": \"Extra Info\",\n               \"description\": \"A flat dictionary of metadata fields\",\n               \"type\": \"object\"\n            },\n            \"excluded\\_embed\\_metadata\\_keys\": {\n               \"title\": \"Excluded Embed Metadata Keys\",\n               \"description\": \"Metadata keys that are excluded from text for the embed model.\",\n               \"type\": \"array\",\n               \"items\": {\n                  \"type\": \"string\"\n               }\n            },\n            \"excluded\\_llm\\_metadata\\_keys\": {\n               \"title\": \"Excluded Llm Metadata Keys\",\n               \"description\": \"Metadata keys that are excluded from text for the LLM.\",\n               \"type\": \"array\",\n               \"items\": {\n                  \"type\": \"string\"\n               }\n            },\n            \"relationships\": {\n               \"title\": \"Relationships\",\n               \"description\": \"A mapping of relationships to other node information.\",\n               \"type\": \"object\",\n               \"additionalProperties\": {\n                  \"anyOf\": \\[\n                     {\n                        \"$ref\": \"#/definitions/RelatedNodeInfo\"\n                     },\n                     {\n                        \"type\": \"array\",\n                        \"items\": {\n                           \"$ref\": \"#/definitions/RelatedNodeInfo\"\n                        }\n                     }\n                  \\]\n               }\n            },\n            \"hash\": {\n               \"title\": \"Hash\",\n               \"description\": \"Hash of the node content.\",\n               \"default\": \"\",\n               \"type\": \"string\"\n            }\n         }\n      }\n   }\n}\n\nFields\n\n*   [`node (llama_index.schema.BaseNode)`](#llama_index.schema.NodeWithScore.node \"llama_index.schema.NodeWithScore.node\")\n    \n*   [`score (Optional[float])`](#llama_index.schema.NodeWithScore.score \"llama_index.schema.NodeWithScore.score\")\n    \n\n_field_ node_: [BaseNode](#llama_index.schema.BaseNode \"llama_index.schema.BaseNode\")_ _\\[Required\\]_[\uf0c1](#llama_index.schema.NodeWithScore.node \"Permalink to this definition\")\n\n_field_ score_: Optional\\[float\\]_ _\\= None_[\uf0c1](#llama_index.schema.NodeWithScore.score \"Permalink to this definition\")\n\n_classmethod_ class\\_name() \u2192 str[\uf0c1](#llama_index.schema.NodeWithScore.class_name \"Permalink to this definition\")\n\nGet the class name, used as a unique ID in serialization.\n\nThis provides a key that makes serialization robust against actual class name changes.\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.schema.NodeWithScore.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.NodeWithScore.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.NodeWithScore.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ from\\_dict(_data: Dict\\[str, Any\\]_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.NodeWithScore.from_dict \"Permalink to this definition\")\n\n_classmethod_ from\\_json(_data\\_str: str_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.schema.NodeWithScore.from_json \"Permalink to this definition\")\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.NodeWithScore.from_orm \"Permalink to this definition\")\n\nget\\_content(_metadata\\_mode: [MetadataMode](#llama_index.schema.MetadataMode \"llama_index.schema.MetadataMode\") \\= MetadataMode.NONE_) \u2192 str[\uf0c1](#llama_index.schema.NodeWithScore.get_content \"Permalink to this definition\")\n\nget\\_embedding() \u2192 List\\[float\\][\uf0c1](#llama_index.schema.NodeWithScore.get_embedding \"Permalink to this definition\")\n\nget\\_score(_raise\\_error: bool \\= False_) \u2192 float[\uf0c1](#llama_index.schema.NodeWithScore.get_score \"Permalink to this definition\")\n\nGet score.\n\nget\\_text() \u2192 str[\uf0c1](#llama_index.schema.NodeWithScore.get_text \"Permalink to this definition\")\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.NodeWithScore.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.NodeWithScore.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.schema.NodeWithScore.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.schema.NodeWithScore.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.schema.NodeWithScore.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.schema.NodeWithScore.schema_json \"Permalink to this definition\")\n\nto\\_dict(_\\*\\*kwargs: Any_) \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.schema.NodeWithScore.to_dict \"Permalink to this definition\")\n\nto\\_json(_\\*\\*kwargs: Any_) \u2192 str[\uf0c1](#llama_index.schema.NodeWithScore.to_json \"Permalink to this definition\")\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.schema.NodeWithScore.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.schema.NodeWithScore.validate \"Permalink to this definition\")\n\n_property_ embedding_: Optional\\[List\\[float\\]\\]_[\uf0c1](#llama_index.schema.NodeWithScore.embedding \"Permalink to this definition\")\n\n_property_ id\\__: str_[\uf0c1](#llama_index.schema.NodeWithScore.id_ \"Permalink to this definition\")\n\n_property_ metadata_: Dict\\[str, Any\\]_[\uf0c1](#llama_index.schema.NodeWithScore.metadata \"Permalink to this definition\")\n\n_property_ node\\_id_: str_[\uf0c1](#llama_index.schema.NodeWithScore.node_id \"Permalink to this definition\")\n\n_property_ text_: str_[\uf0c1](#llama_index.schema.NodeWithScore.text \"Permalink to this definition\")\n\n_class_ llama\\_index.schema.ObjectType(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\uf0c1](#llama_index.schema.ObjectType \"Permalink to this definition\")\n\ncapitalize()[\uf0c1](#llama_index.schema.ObjectType.capitalize \"Permalink to this definition\")\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower case.\n\ncasefold()[\uf0c1](#llama_index.schema.ObjectType.casefold \"Permalink to this definition\")\n\nReturn a version of the string suitable for caseless comparisons.\n\ncenter(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.ObjectType.center \"Permalink to this definition\")\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\ncount(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.ObjectType.count \"Permalink to this definition\")\n\nReturn the number of non-overlapping occurrences of substring sub in string S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nencode(_encoding\\='utf-8'_, _errors\\='strict'_)[\uf0c1](#llama_index.schema.ObjectType.encode \"Permalink to this definition\")\n\nEncode the string using the codec registered for encoding.\n\nencoding\n\nThe encoding in which to encode the string.\n\nerrors\n\nThe error handling scheme to use for encoding errors. The default is \u2018strict\u2019 meaning that encoding errors raise a UnicodeEncodeError. Other possible values are \u2018ignore\u2019, \u2018replace\u2019 and \u2018xmlcharrefreplace\u2019 as well as any other name registered with codecs.register\\_error that can handle UnicodeEncodeErrors.\n\nendswith(_suffix_\\[, _start_\\[, _end_\\]\\]) \u2192 bool[\uf0c1](#llama_index.schema.ObjectType.endswith \"Permalink to this definition\")\n\nReturn True if S ends with the specified suffix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. suffix can also be a tuple of strings to try.\n\nexpandtabs(_tabsize\\=8_)[\uf0c1](#llama_index.schema.ObjectType.expandtabs \"Permalink to this definition\")\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed.\n\nfind(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.ObjectType.find \"Permalink to this definition\")\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\nformat(_\\*args_, _\\*\\*kwargs_) \u2192 str[\uf0c1](#llama_index.schema.ObjectType.format \"Permalink to this definition\")\n\nReturn a formatted version of S, using substitutions from args and kwargs. The substitutions are identified by braces (\u2018{\u2018 and \u2018}\u2019).\n\nformat\\_map(_mapping_) \u2192 str[\uf0c1](#llama_index.schema.ObjectType.format_map \"Permalink to this definition\")\n\nReturn a formatted version of S, using substitutions from mapping. The substitutions are identified by braces (\u2018{\u2018 and \u2018}\u2019).\n\nindex(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.ObjectType.index \"Permalink to this definition\")\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\nisalnum()[\uf0c1](#llama_index.schema.ObjectType.isalnum \"Permalink to this definition\")\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.\n\nisalpha()[\uf0c1](#llama_index.schema.ObjectType.isalpha \"Permalink to this definition\")\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.\n\nisascii()[\uf0c1](#llama_index.schema.ObjectType.isascii \"Permalink to this definition\")\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.\n\nisdecimal()[\uf0c1](#llama_index.schema.ObjectType.isdecimal \"Permalink to this definition\")\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and there is at least one character in the string.\n\nisdigit()[\uf0c1](#llama_index.schema.ObjectType.isdigit \"Permalink to this definition\")\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there is at least one character in the string.\n\nisidentifier()[\uf0c1](#llama_index.schema.ObjectType.isidentifier \"Permalink to this definition\")\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \u201cdef\u201d or \u201cclass\u201d.\n\nislower()[\uf0c1](#llama_index.schema.ObjectType.islower \"Permalink to this definition\")\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.\n\nisnumeric()[\uf0c1](#llama_index.schema.ObjectType.isnumeric \"Permalink to this definition\")\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at least one character in the string.\n\nisprintable()[\uf0c1](#llama_index.schema.ObjectType.isprintable \"Permalink to this definition\")\n\nReturn True if the string is printable, False otherwise.\n\nA string is printable if all of its characters are considered printable in repr() or if it is empty.\n\nisspace()[\uf0c1](#llama_index.schema.ObjectType.isspace \"Permalink to this definition\")\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there is at least one character in the string.\n\nistitle()[\uf0c1](#llama_index.schema.ObjectType.istitle \"Permalink to this definition\")\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.\n\nisupper()[\uf0c1](#llama_index.schema.ObjectType.isupper \"Permalink to this definition\")\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.\n\njoin(_iterable_, _/_)[\uf0c1](#llama_index.schema.ObjectType.join \"Permalink to this definition\")\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string. The result is returned as a new string.\n\nExample: \u2018.\u2019.join(\\[\u2018ab\u2019, \u2018pq\u2019, \u2018rs\u2019\\]) -> \u2018ab.pq.rs\u2019\n\nljust(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.ObjectType.ljust \"Permalink to this definition\")\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\nlower()[\uf0c1](#llama_index.schema.ObjectType.lower \"Permalink to this definition\")\n\nReturn a copy of the string converted to lowercase.\n\nlstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.ObjectType.lstrip \"Permalink to this definition\")\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n_static_ maketrans()[\uf0c1](#llama_index.schema.ObjectType.maketrans \"Permalink to this definition\")\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.\n\npartition(_sep_, _/_)[\uf0c1](#llama_index.schema.ObjectType.partition \"Permalink to this definition\")\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string and two empty strings.\n\nremoveprefix(_prefix_, _/_)[\uf0c1](#llama_index.schema.ObjectType.removeprefix \"Permalink to this definition\")\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string\\[len(prefix):\\]. Otherwise, return a copy of the original string.\n\nremovesuffix(_suffix_, _/_)[\uf0c1](#llama_index.schema.ObjectType.removesuffix \"Permalink to this definition\")\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty, return string\\[:-len(suffix)\\]. Otherwise, return a copy of the original string.\n\nreplace(_old_, _new_, _count\\=\\-1_, _/_)[\uf0c1](#llama_index.schema.ObjectType.replace \"Permalink to this definition\")\n\nReturn a copy with all occurrences of substring old replaced by new.\n\n> count\n> \n> Maximum number of occurrences to replace. -1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are replaced.\n\nrfind(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.ObjectType.rfind \"Permalink to this definition\")\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\nrindex(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.schema.ObjectType.rindex \"Permalink to this definition\")\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\nrjust(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.schema.ObjectType.rjust \"Permalink to this definition\")\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\nrpartition(_sep_, _/_)[\uf0c1](#llama_index.schema.ObjectType.rpartition \"Permalink to this definition\")\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings and the original string.\n\nrsplit(_sep\\=None_, _maxsplit\\=\\-1_)[\uf0c1](#llama_index.schema.ObjectType.rsplit \"Permalink to this definition\")\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n> sep\n> \n> The separator used to split the string.\n> \n> When set to None (the default value), will split on any whitespace character (including n r t f and spaces) and will discard empty strings from the result.\n> \n> maxsplit\n> \n> Maximum number of splits (starting from the left). -1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front.\n\nrstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.ObjectType.rstrip \"Permalink to this definition\")\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\nsplit(_sep\\=None_, _maxsplit\\=\\-1_)[\uf0c1](#llama_index.schema.ObjectType.split \"Permalink to this definition\")\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n> sep\n> \n> The separator used to split the string.\n> \n> When set to None (the default value), will split on any whitespace character (including n r t f and spaces) and will discard empty strings from the result.\n> \n> maxsplit\n> \n> Maximum number of splits (starting from the left). -1 (the default value) means no limit.\n\nNote, str.split() is mainly useful for data that has been intentionally delimited. With natural text that includes punctuation, consider using the regular expression module.\n\nsplitlines(_keepends\\=False_)[\uf0c1](#llama_index.schema.ObjectType.splitlines \"Permalink to this definition\")\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and true.\n\nstartswith(_prefix_\\[, _start_\\[, _end_\\]\\]) \u2192 bool[\uf0c1](#llama_index.schema.ObjectType.startswith \"Permalink to this definition\")\n\nReturn True if S starts with the specified prefix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. prefix can also be a tuple of strings to try.\n\nstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.schema.ObjectType.strip \"Permalink to this definition\")\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\nswapcase()[\uf0c1](#llama_index.schema.ObjectType.swapcase \"Permalink to this definition\")\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\n\ntitle()[\uf0c1](#llama_index.schema.ObjectType.title \"Permalink to this definition\")\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining cased characters have lower case.\n\ntranslate(_table_, _/_)[\uf0c1](#llama_index.schema.ObjectType.translate \"Permalink to this definition\")\n\nReplace each character in the string using the given translation table.\n\n> table\n> \n> Translation table, which must be a mapping of Unicode ordinals to Unicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via \\_\\_getitem\\_\\_, for instance a dictionary or list. If this operation raises LookupError, the character is left untouched. Characters mapped to None are deleted.\n\nupper()[\uf0c1](#llama_index.schema.ObjectType.upper \"Permalink to this definition\")\n\nReturn a copy of the string converted to uppercase.\n\nzfill(_width_, _/_)[\uf0c1](#llama_index.schema.ObjectType.zfill \"Permalink to this definition\")\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated.\n\nShow JSON schema\n\n{\n   \"title\": \"RelatedNodeInfo\",\n   \"description\": \"Base component object to capture class names.\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"node\\_id\": {\n         \"title\": \"Node Id\",\n         \"type\": \"string\"\n      },\n      \"node\\_type\": {\n         \"$ref\": \"#/definitions/ObjectType\"\n      },\n      \"metadata\": {\n         \"title\": \"Metadata\",\n         \"type\": \"object\"\n      },\n      \"hash\": {\n         \"title\": \"Hash\",\n         \"type\": \"string\"\n      }\n   },\n   \"required\": \\[\n      \"node\\_id\"\n   \\],\n   \"definitions\": {\n      \"ObjectType\": {\n         \"title\": \"ObjectType\",\n         \"description\": \"An enumeration.\",\n         \"enum\": \\[\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\"\n         \\],\n         \"type\": \"string\"\n      }\n   }\n}\n\nFields\n\n*   [`hash (Optional[str])`](#llama_index.schema.RelatedNodeInfo.hash \"llama_index.schema.RelatedNodeInfo.hash\")\n    \n*   [`metadata (Dict[str, Any])`](#llama_index.schema.RelatedNodeInfo.metadata \"llama_index.schema.RelatedNodeInfo.metadata\")\n    \n*   [`node_id (str)`](#llama_index.schema.RelatedNodeInfo.node_id \"llama_index.schema.RelatedNodeInfo.node_id\")\n    \n*   [`node_type (Optional[llama_index.schema.ObjectType])`](#llama_index.schema.RelatedNodeInfo.node_type \"llama_index.schema.RelatedNodeInfo.node_type\")\n    \n\nGet the class name, used as a unique ID in serialization.\n\nThis provides a key that makes serialization robust against actual class name changes.\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns."
}