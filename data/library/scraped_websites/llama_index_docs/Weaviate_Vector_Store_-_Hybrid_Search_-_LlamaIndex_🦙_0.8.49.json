{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/examples/vector_stores/WeaviateIndexDemo-Hybrid.html",
        "title": "Weaviate Vector Store - Hybrid Search - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\nimport logging\nimport sys\n\nlogging.basicConfig(stream\\=sys.stdout, level\\=logging.INFO)\nlogging.getLogger().addHandler(logging.StreamHandler(stream\\=sys.stdout))\n\n## Creating a Weaviate Client[\uf0c1](#creating-a-weaviate-client \"Permalink to this heading\")\n\nresource\\_owner\\_config \\= weaviate.AuthClientPassword(\n    username\\=\"<username>\",\n    password\\=\"<password>\",\n)\n\n\\# Connect to cloud instance\n\\# client = weaviate.Client(\"https://<cluster-id>.semi.network/\", auth\\_client\\_secret=resource\\_owner\\_config)\n\n\\# Connect to local instance\nclient \\= weaviate.Client(\"http://localhost:8080\")\n\n## Load documents[\uf0c1](#load-documents \"Permalink to this heading\")\n\nfrom llama\\_index import VectorStoreIndex, SimpleDirectoryReader\nfrom llama\\_index.vector\\_stores import WeaviateVectorStore\nfrom llama\\_index.response.notebook\\_utils import display\\_response\n\n\\# load documents\ndocuments \\= SimpleDirectoryReader(\"../paul\\_graham\\_essay/data\").load\\_data()\n\n## Build the VectorStoreIndex with WeaviateVectorStore[\uf0c1](#build-the-vectorstoreindex-with-weaviatevectorstore \"Permalink to this heading\")\n\nfrom llama\\_index.storage.storage\\_context import StorageContext\n\nvector\\_store \\= WeaviateVectorStore(weaviate\\_client\\=client)\nstorage\\_context \\= StorageContext.from\\_defaults(vector\\_store\\=vector\\_store)\nindex \\= VectorStoreIndex.from\\_documents(\n    documents, storage\\_context\\=storage\\_context\n)\n\n\\# NOTE: you may also choose to define a index\\_name manually.\n\\# index\\_name = \"test\\_prefix\"\n\\# vector\\_store = WeaviateVectorStore(weaviate\\_client=client, index\\_name=index\\_name)\n\n## Query Index with Default Vector Search[\uf0c1](#query-index-with-default-vector-search \"Permalink to this heading\")\n\n\\# set Logging to DEBUG for more detailed outputs\nquery\\_engine \\= index.as\\_query\\_engine(similarity\\_top\\_k\\=2)\nresponse \\= query\\_engine.query(\"What did the author do growing up?\")\n\ndisplay\\_response(response)\n\n## Query Index with Hybrid Search[\uf0c1](#query-index-with-hybrid-search \"Permalink to this heading\")\n\nUse hybrid search with bm25 and vector.  \n`alpha` parameter determines weighting (alpha = 0 -> bm25, alpha=1 -> vector search).\n\n### By default, `alpha=0.75` is used (very similar to vector search)[\uf0c1](#by-default-alpha-0-75-is-used-very-similar-to-vector-search \"Permalink to this heading\")\n\n\\# set Logging to DEBUG for more detailed outputs\nquery\\_engine \\= index.as\\_query\\_engine(\n    vector\\_store\\_query\\_mode\\=\"hybrid\", similarity\\_top\\_k\\=2\n)\nresponse \\= query\\_engine.query(\n    \"What did the author do growing up?\",\n)\n\ndisplay\\_response(response)\n\n### Set `alpha=0.` to favor bm25[\uf0c1](#set-alpha-0-to-favor-bm25 \"Permalink to this heading\")\n\n\\# set Logging to DEBUG for more detailed outputs\nquery\\_engine \\= index.as\\_query\\_engine(\n    vector\\_store\\_query\\_mode\\=\"hybrid\", similarity\\_top\\_k\\=2, alpha\\=0.0\n)\nresponse \\= query\\_engine.query(\n    \"What did the author do growing up?\",\n)\n\ndisplay\\_response(response)"
}