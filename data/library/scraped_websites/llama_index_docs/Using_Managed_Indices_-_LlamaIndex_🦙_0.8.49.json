{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/community/integrations/managed_indices.html",
        "title": "Using Managed Indices - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "LlamaIndex offers multiple integration points with Managed Indices. A managed index is a special type of index that is not managed locally as part of LlamaIndex but instead is managed via an API, such as [Vectara](https://vectara.com/).\n\n## Using a Managed Index[\uf0c1](#using-a-managed-index \"Permalink to this heading\")\n\nSimilar to any other index within LlamaIndex (tree, keyword table, list), any `ManagedIndex` can be constructed with a collection of documents. Once constructed, the index can be used for querying.\n\nIf the Index has been previously populated with documents - it can also be used directly for querying.\n\n`VectaraIndex` is currently the only supported managed index, although we expect more to be available soon. Below we show how to use it.\n\n**Vectara Index Construction/Querying**\n\nFirst, [sign up](https://vectara.com/integrations/llama_index) and use the Vectara Console to create a corpus (aka Index), and add an API key for access. Then put the customer id, corpus id, and API key in your environment.\n\nThen construct the Vectara Index and query it as follows:\n\nfrom llama\\_index import ManagedIndex, SimpleDirectoryReade\nfrom llama\\_index.managed import VectaraIndex\n\n\\# Load documents and build index\nvectara\\_customer\\_id \\= os.environ.get(\"VECTARA\\_CUSTOMER\\_ID\")\nvectara\\_corpus\\_id \\= os.environ.get(\"VECTARA\\_CORPUS\\_ID\")\nvectara\\_api\\_key \\= os.environ.get(\"VECTARA\\_API\\_KEY\")\ndocuments \\= SimpleDirectoryReader('../paul\\_graham\\_essay/data').load\\_data()\nindex \\= VectaraIndex.from\\_documents(documents, vectara\\_customer\\_id\\=vectara\\_customer\\_id, vectara\\_corpus\\_id\\=vectara\\_corpus\\_id, vectara\\_api\\_key\\=vectara\\_api\\_key)\n\n\\# Query index\nquery\\_engine \\= index.as\\_query\\_engine()\nresponse \\= query\\_engine.query(\"What did the author do growing up?\")\n\nNote that if the environment variables `VECTARA_CUSTOMER_ID`, `VECTARA_CORPUS_ID` and `VECTARA_API_KEY` are in the environment already, you do not have to explicitly specifying them in your call and the VectaraIndex class will read them from the environment. For example this should be equivalent to the above, if these variables are in the environment already:\n\nfrom llama\\_index import ManagedIndex, SimpleDirectoryReade\nfrom llama\\_index.managed import VectaraIndex\n\n\\# Load documents and build index\ndocuments \\= SimpleDirectoryReader('../paul\\_graham\\_essay/data').load\\_data()\nindex \\= VectaraIndex.from\\_documents(documents)\n\n\\# Query index\nquery\\_engine \\= index.as\\_query\\_engine()\nresponse \\= query\\_engine.query(\"What did the author do growing up?\")"
}