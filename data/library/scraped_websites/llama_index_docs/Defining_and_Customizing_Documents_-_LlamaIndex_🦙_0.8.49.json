{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/core_modules/data_modules/documents_and_nodes/usage_documents.html",
        "title": "Defining and Customizing Documents - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "## Defining Documents[\uf0c1](#defining-documents \"Permalink to this heading\")\n\nDocuments can either be created automatically via data loaders, or constructed manually.\n\nBy default, all of our [data loaders](https://docs.llamaindex.ai/en/stable/core_modules/data_modules/connector/root.html) (including those offered on LlamaHub) return `Document` objects through the `load_data` function.\n\nfrom llama\\_index import SimpleDirectoryReader\n\ndocuments \\= SimpleDirectoryReader('./data').load\\_data()\n\nYou can also choose to construct documents manually. LlamaIndex exposes the `Document` struct.\n\nfrom llama\\_index import Document\n\ntext\\_list \\= \\[text1, text2, ...\\]\ndocuments \\= \\[Document(text\\=t) for t in text\\_list\\]\n\nTo speed up prototyping and development, you can also quickly create a document using some default text:\n\ndocument \\= Document.example()\n\n## Customizing Documents[\uf0c1](#customizing-documents \"Permalink to this heading\")\n\nThis section covers various ways to customize `Document` objects. Since the `Document` object is a subclass of our `TextNode` object, all these settings and details apply to the `TextNode` object class as well.\n\n### Customizing the id[\uf0c1](#customizing-the-id \"Permalink to this heading\")\n\nAs detailed in the section [Document Management](https://docs.llamaindex.ai/en/stable/core_modules/data_modules/index/document_management.html), the `doc_id` is used to enable efficient refreshing of documents in the index. When using the `SimpleDirectoryReader`, you can automatically set the doc `doc_id` to be the full path to each document:\n\nfrom llama\\_index import SimpleDirectoryReader\n\ndocuments \\= SimpleDirectoryReader(\"./data\", filename\\_as\\_id\\=True).load\\_data()\nprint(\\[x.doc\\_id for x in documents\\])\n\nYou can also set the `doc_id` of any `Document` directly!\n\ndocument.doc\\_id \\= \"My new document id!\"\n\nNote: the ID can also be set through the `node_id` or `id_` property on a Document object, similar to a `TextNode` object.\n\n### Summary[\uf0c1](#summary \"Permalink to this heading\")\n\nKnowing all this, let\u2019s create a short example using all this power:\n\nfrom llama\\_index import Document\nfrom llama\\_index.schema import MetadataMode\n\ndocument \\= Document(\n    text\\=\"This is a super-customized document\",\n    metadata\\={\n        \"file\\_name\": \"super\\_secret\\_document.txt\",\n        \"category\": \"finance\",\n        \"author\": \"LlamaIndex\"\n    },\n    excluded\\_llm\\_metadata\\_keys\\=\\['file\\_name'\\],\n    metadata\\_seperator\\=\"::\",\n    metadata\\_template\\=\"{key}\\=>{value}\",\n    text\\_template\\=\"Metadata: {metadata\\_str}\\\\n\\-----\\\\nContent: {content}\",\n)\n\nprint(\"The LLM sees this: \\\\n\", document.get\\_content(metadata\\_mode\\=MetadataMode.LLM))\nprint(\"The Embedding model sees this: \\\\n\", document.get\\_content(metadata\\_mode\\=MetadataMode.EMBED))"
}