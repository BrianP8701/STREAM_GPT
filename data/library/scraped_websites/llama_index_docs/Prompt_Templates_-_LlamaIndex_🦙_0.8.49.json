{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/api_reference/prompts.html",
        "title": "Prompt Templates - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "{\n   \"title\": \"LangchainPromptTemplate\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"metadata\": {\n         \"title\": \"Metadata\",\n         \"type\": \"object\"\n      },\n      \"template\\_vars\": {\n         \"title\": \"Template Vars\",\n         \"type\": \"array\",\n         \"items\": {\n            \"type\": \"string\"\n         }\n      },\n      \"kwargs\": {\n         \"title\": \"Kwargs\",\n         \"type\": \"object\",\n         \"additionalProperties\": {\n            \"type\": \"string\"\n         }\n      },\n      \"output\\_parser\": {\n         \"title\": \"Output Parser\"\n      },\n      \"selector\": {\n         \"$ref\": \"#/definitions/ConditionalPromptSelector\"\n      }\n   },\n   \"required\": \\[\n      \"metadata\",\n      \"template\\_vars\",\n      \"kwargs\",\n      \"selector\"\n   \\],\n   \"definitions\": {\n      \"BaseOutputParser\": {\n         \"title\": \"BaseOutputParser\",\n         \"description\": \"Base class to parse the output of an LLM call.\\\\n\\\\nOutput parsers help structure language model responses.\\\\n\\\\nExample:\\\\n    .. code-block:: python\\\\n\\\\n        class BooleanOutputParser(BaseOutputParser\\[bool\\]):\\\\n            true\\_val: str = \\\\\"YES\\\\\"\\\\n            false\\_val: str = \\\\\"NO\\\\\"\\\\n\\\\n            def parse(self, text: str) -> bool:\\\\n                cleaned\\_text = text.strip().upper()\\\\n                if cleaned\\_text not in (self.true\\_val.upper(), self.false\\_val.upper()):\\\\n                    raise OutputParserException(\\\\n                        f\\\\\"BooleanOutputParser expected output value to either be \\\\\"\\\\n                        f\\\\\"{self.true\\_val} or {self.false\\_val} (case-insensitive). \\\\\"\\\\n                        f\\\\\"Received {cleaned\\_text}.\\\\\"\\\\n                    )\\\\n                return cleaned\\_text == self.true\\_val.upper()\\\\n\\\\n                @property\\\\n                def \\_type(self) -> str:\\\\n                        return \\\\\"boolean\\_output\\_parser\\\\\"\",\n         \"type\": \"object\",\n         \"properties\": {}\n      },\n      \"BasePromptTemplate\": {\n         \"title\": \"BasePromptTemplate\",\n         \"description\": \"Base class for all prompt templates, returning a prompt.\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"input\\_variables\": {\n               \"title\": \"Input Variables\",\n               \"type\": \"array\",\n               \"items\": {\n                  \"type\": \"string\"\n               }\n            },\n            \"input\\_types\": {\n               \"title\": \"Input Types\",\n               \"type\": \"object\"\n            },\n            \"output\\_parser\": {\n               \"$ref\": \"#/definitions/BaseOutputParser\"\n            }\n         },\n         \"required\": \\[\n            \"input\\_variables\"\n         \\]\n      },\n      \"ConditionalPromptSelector\": {\n         \"title\": \"ConditionalPromptSelector\",\n         \"description\": \"Prompt collection that goes through conditionals.\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"default\\_prompt\": {\n               \"$ref\": \"#/definitions/BasePromptTemplate\"\n            }\n         },\n         \"required\": \\[\n            \"default\\_prompt\"\n         \\]\n      }\n   }\n}"
}