{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/api_reference/query/retrievers/vector_store.html",
        "title": "Vector Store Retrievers - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "Toggle table of contents sidebar\n\n## Vector Store Retrievers[\uf0c1](#module-llama_index.indices.vector_store.retrievers.retriever \"Permalink to this heading\")\n\nBase vector store index query.\n\n_class_ llama\\_index.indices.vector\\_store.retrievers.retriever.VectorIndexRetriever(_index: [VectorStoreIndex](https://docs.llamaindex.ai/en/stable/api_reference/indices/vector_store.html#llama_index.indices.vector_store.base.VectorStoreIndex \"llama_index.indices.vector_store.base.VectorStoreIndex\")_, _similarity\\_top\\_k: int \\= 2_, _vector\\_store\\_query\\_mode: [VectorStoreQueryMode](#llama_index.vector_stores.types.VectorStoreQueryMode \"llama_index.vector_stores.types.VectorStoreQueryMode\") \\= VectorStoreQueryMode.DEFAULT_, _filters: Optional\\[[MetadataFilters](#llama_index.vector_stores.types.MetadataFilters \"llama_index.vector_stores.types.MetadataFilters\")\\] \\= None_, _alpha: Optional\\[float\\] \\= None_, _node\\_ids: Optional\\[List\\[str\\]\\] \\= None_, _doc\\_ids: Optional\\[List\\[str\\]\\] \\= None_, _sparse\\_top\\_k: Optional\\[int\\] \\= None_, _\\*\\*kwargs: Any_)[\uf0c1](#llama_index.indices.vector_store.retrievers.retriever.VectorIndexRetriever \"Permalink to this definition\")\n\nVector index retriever.\n\nParameters\n\n*   **index** ([_VectorStoreIndex_](https://docs.llamaindex.ai/en/stable/api_reference/indices/vector_store.html#llama_index.indices.vector_store.base.VectorStoreIndex \"llama_index.indices.vector_store.base.VectorStoreIndex\")) \u2013 vector store index.\n    \n*   **similarity\\_top\\_k** (_int_) \u2013 number of top k results to return.\n    \n*   **vector\\_store\\_query\\_mode** (_str_) \u2013 vector store query mode See reference for VectorStoreQueryMode for full list of supported modes.\n    \n*   **filters** (_Optional__\\[_[_MetadataFilters_](#llama_index.vector_stores.types.MetadataFilters \"llama_index.vector_stores.types.MetadataFilters\")_\\]_) \u2013 metadata filters, defaults to None\n    \n*   **alpha** (_float_) \u2013 weight for sparse/dense retrieval, only used for hybrid query mode.\n    \n*   **doc\\_ids** (_Optional__\\[__List__\\[__str__\\]__\\]_) \u2013 list of documents to constrain search.\n    \n*   **vector\\_store\\_kwargs** (_dict_) \u2013 Additional vector store specific kwargs to pass through to the vector store at query time.\n    \n\nget\\_service\\_context() \u2192 Optional\\[[ServiceContext](https://docs.llamaindex.ai/en/stable/api_reference/service_context.html#llama_index.indices.service_context.ServiceContext \"llama_index.indices.service_context.ServiceContext\")\\][\uf0c1](#llama_index.indices.vector_store.retrievers.retriever.VectorIndexRetriever.get_service_context \"Permalink to this definition\")\n\nAttempts to resolve a service context. Short-circuits at self.service\\_context, self.\\_service\\_context, or self.\\_index.service\\_context.\n\nretrieve(_str\\_or\\_query\\_bundle: Union\\[str, [QueryBundle](https://docs.llamaindex.ai/en/stable/api_reference/query/query_bundle.html#llama_index.indices.query.schema.QueryBundle \"llama_index.indices.query.schema.QueryBundle\")\\]_) \u2192 List\\[[NodeWithScore](https://docs.llamaindex.ai/en/stable/api_reference/node.html#llama_index.schema.NodeWithScore \"llama_index.schema.NodeWithScore\")\\][\uf0c1](#llama_index.indices.vector_store.retrievers.retriever.VectorIndexRetriever.retrieve \"Permalink to this definition\")\n\nRetrieve nodes given query.\n\nParameters\n\n**str\\_or\\_query\\_bundle** (_QueryType_) \u2013 Either a query string or a QueryBundle object.\n\n_property_ similarity\\_top\\_k_: int_[\uf0c1](#llama_index.indices.vector_store.retrievers.retriever.VectorIndexRetriever.similarity_top_k \"Permalink to this definition\")\n\nReturn similarity top k.\n\n_class_ llama\\_index.indices.vector\\_store.retrievers.auto\\_retriever.auto\\_retriever.VectorIndexAutoRetriever(_index: [VectorStoreIndex](https://docs.llamaindex.ai/en/stable/api_reference/indices/vector_store.html#llama_index.indices.vector_store.base.VectorStoreIndex \"llama_index.indices.vector_store.base.VectorStoreIndex\")_, _vector\\_store\\_info: [VectorStoreInfo](#llama_index.vector_stores.types.VectorStoreInfo \"llama_index.vector_stores.types.VectorStoreInfo\")_, _prompt\\_template\\_str: Optional\\[str\\] \\= None_, _service\\_context: Optional\\[[ServiceContext](https://docs.llamaindex.ai/en/stable/api_reference/service_context.html#llama_index.indices.service_context.ServiceContext \"llama_index.indices.service_context.ServiceContext\")\\] \\= None_, _max\\_top\\_k: int \\= 10_, _similarity\\_top\\_k: int \\= 2_, _vector\\_store\\_query\\_mode: [VectorStoreQueryMode](#llama_index.vector_stores.types.VectorStoreQueryMode \"llama_index.vector_stores.types.VectorStoreQueryMode\") \\= VectorStoreQueryMode.DEFAULT_, _\\*\\*kwargs: Any_)[\uf0c1](#llama_index.indices.vector_store.retrievers.auto_retriever.auto_retriever.VectorIndexAutoRetriever \"Permalink to this definition\")\n\nVector store auto retriever.\n\nA retriever for vector store index that uses an LLM to automatically set vector store query parameters.\n\nParameters\n\n*   **index** ([_VectorStoreIndex_](https://docs.llamaindex.ai/en/stable/api_reference/indices/vector_store.html#llama_index.indices.vector_store.base.VectorStoreIndex \"llama_index.indices.vector_store.base.VectorStoreIndex\")) \u2013 vector store index\n    \n*   **vector\\_store\\_info** ([_VectorStoreInfo_](#llama_index.vector_stores.types.VectorStoreInfo \"llama_index.vector_stores.types.VectorStoreInfo\")) \u2013 additional information information about vector store content and supported metadata filters. The natural language description is used by an LLM to automatically set vector store query parameters.\n    \n*   **prompt\\_template\\_str** \u2013 custom prompt template string for LLM. Uses default template string if None.\n    \n*   **service\\_context** \u2013 service context containing reference to LLMPredictor. Uses service context from index be default if None.\n    \n*   **similarity\\_top\\_k** (_int_) \u2013 number of top k results to return.\n    \n*   **max\\_top\\_k** (_int_) \u2013 the maximum top\\_k allowed. The top\\_k set by LLM or similarity\\_top\\_k will be clamped to this value.\n    \n*   **vector\\_store\\_query\\_mode** (_str_) \u2013 vector store query mode See reference for VectorStoreQueryMode for full list of supported modes.\n    \n\nget\\_service\\_context() \u2192 Optional\\[[ServiceContext](https://docs.llamaindex.ai/en/stable/api_reference/service_context.html#llama_index.indices.service_context.ServiceContext \"llama_index.indices.service_context.ServiceContext\")\\][\uf0c1](#llama_index.indices.vector_store.retrievers.auto_retriever.auto_retriever.VectorIndexAutoRetriever.get_service_context \"Permalink to this definition\")\n\nAttempts to resolve a service context. Short-circuits at self.service\\_context, self.\\_service\\_context, or self.\\_index.service\\_context.\n\nretrieve(_str\\_or\\_query\\_bundle: Union\\[str, [QueryBundle](https://docs.llamaindex.ai/en/stable/api_reference/query/query_bundle.html#llama_index.indices.query.schema.QueryBundle \"llama_index.indices.query.schema.QueryBundle\")\\]_) \u2192 List\\[[NodeWithScore](https://docs.llamaindex.ai/en/stable/api_reference/node.html#llama_index.schema.NodeWithScore \"llama_index.schema.NodeWithScore\")\\][\uf0c1](#llama_index.indices.vector_store.retrievers.auto_retriever.auto_retriever.VectorIndexAutoRetriever.retrieve \"Permalink to this definition\")\n\nRetrieve nodes given query.\n\nParameters\n\n**str\\_or\\_query\\_bundle** (_QueryType_) \u2013 Either a query string or a QueryBundle object.\n\nVector store index types.\n\n_pydantic model_ llama\\_index.vector\\_stores.types.BasePydanticVectorStore[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore \"Permalink to this definition\")\n\nAbstract vector store protocol.\n\nShow JSON schema\n\n{\n   \"title\": \"BasePydanticVectorStore\",\n   \"description\": \"Abstract vector store protocol.\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"stores\\_text\": {\n         \"title\": \"Stores Text\",\n         \"type\": \"boolean\"\n      },\n      \"is\\_embedding\\_query\": {\n         \"title\": \"Is Embedding Query\",\n         \"default\": true,\n         \"type\": \"boolean\"\n      }\n   },\n   \"required\": \\[\n      \"stores\\_text\"\n   \\]\n}\n\nFields\n\n*   [`is_embedding_query (bool)`](#llama_index.vector_stores.types.BasePydanticVectorStore.is_embedding_query \"llama_index.vector_stores.types.BasePydanticVectorStore.is_embedding_query\")\n    \n*   [`stores_text (bool)`](#llama_index.vector_stores.types.BasePydanticVectorStore.stores_text \"llama_index.vector_stores.types.BasePydanticVectorStore.stores_text\")\n    \n\n_field_ is\\_embedding\\_query_: bool_ _\\= True_[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.is_embedding_query \"Permalink to this definition\")\n\n_field_ stores\\_text_: bool_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.stores_text \"Permalink to this definition\")\n\n_abstract_ add(_nodes: List\\[[BaseNode](https://docs.llamaindex.ai/en/stable/api_reference/node.html#llama_index.schema.BaseNode \"llama_index.schema.BaseNode\")\\]_) \u2192 List\\[str\\][\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.add \"Permalink to this definition\")\n\nAdd nodes to vector store.\n\n_async_ adelete(_ref\\_doc\\_id: str_, _\\*\\*delete\\_kwargs: Any_) \u2192 None[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.adelete \"Permalink to this definition\")\n\nDelete nodes using with ref\\_doc\\_id. NOTE: this is not implemented for all vector stores. If not implemented, it will just call delete synchronously.\n\n_async_ aquery(_query: [VectorStoreQuery](https://docs.llamaindex.ai/en/stable/api_reference/storage/vector_store.html#llama_index.vector_stores.VectorStoreQuery \"llama_index.vector_stores.types.VectorStoreQuery\")_, _\\*\\*kwargs: Any_) \u2192 [VectorStoreQueryResult](https://docs.llamaindex.ai/en/stable/api_reference/storage/vector_store.html#llama_index.vector_stores.VectorStoreQueryResult \"llama_index.vector_stores.types.VectorStoreQueryResult\")[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.aquery \"Permalink to this definition\")\n\nAsynchronously query vector store. NOTE: this is not implemented for all vector stores. If not implemented, it will just call query synchronously.\n\n_async_ async\\_add(_nodes: List\\[[BaseNode](https://docs.llamaindex.ai/en/stable/api_reference/node.html#llama_index.schema.BaseNode \"llama_index.schema.BaseNode\")\\]_) \u2192 List\\[str\\][\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.async_add \"Permalink to this definition\")\n\nAsynchronously add nodes to vector store. NOTE: this is not implemented for all vector stores. If not implemented, it will just call add synchronously.\n\n_abstract classmethod_ class\\_name() \u2192 str[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.class_name \"Permalink to this definition\")\n\nGet the class name, used as a unique ID in serialization.\n\nThis provides a key that makes serialization robust against actual class name changes.\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\n_abstract_ delete(_ref\\_doc\\_id: str_, _\\*\\*delete\\_kwargs: Any_) \u2192 None[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.delete \"Permalink to this definition\")\n\nDelete nodes using with ref\\_doc\\_id.\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ from\\_dict(_data: Dict\\[str, Any\\]_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.from_dict \"Permalink to this definition\")\n\n_classmethod_ from\\_json(_data\\_str: str_, _\\*\\*kwargs: Any_) \u2192 Self[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.from_json \"Permalink to this definition\")\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.from_orm \"Permalink to this definition\")\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.parse_raw \"Permalink to this definition\")\n\npersist(_persist\\_path: str_, _fs: Optional\\[AbstractFileSystem\\] \\= None_) \u2192 None[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.persist \"Permalink to this definition\")\n\n_abstract_ query(_query: [VectorStoreQuery](https://docs.llamaindex.ai/en/stable/api_reference/storage/vector_store.html#llama_index.vector_stores.VectorStoreQuery \"llama_index.vector_stores.types.VectorStoreQuery\")_, _\\*\\*kwargs: Any_) \u2192 [VectorStoreQueryResult](https://docs.llamaindex.ai/en/stable/api_reference/storage/vector_store.html#llama_index.vector_stores.VectorStoreQueryResult \"llama_index.vector_stores.types.VectorStoreQueryResult\")[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.query \"Permalink to this definition\")\n\nQuery vector store.\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.schema_json \"Permalink to this definition\")\n\nto\\_dict(_\\*\\*kwargs: Any_) \u2192 Dict\\[str, Any\\][\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.to_dict \"Permalink to this definition\")\n\nto\\_json(_\\*\\*kwargs: Any_) \u2192 str[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.to_json \"Permalink to this definition\")\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.validate \"Permalink to this definition\")\n\n_abstract property_ client_: Any_[\uf0c1](#llama_index.vector_stores.types.BasePydanticVectorStore.client \"Permalink to this definition\")\n\nGet client.\n\n_pydantic model_ llama\\_index.vector\\_stores.types.ExactMatchFilter[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter \"Permalink to this definition\")\n\nExact match metadata filter for vector stores.\n\nValue uses Strict\\* types, as int, float and str are compatible types and were all converted to string before.\n\nSee: [https://docs.pydantic.dev/latest/usage/types/#strict-types](https://docs.pydantic.dev/latest/usage/types/#strict-types)\n\nShow JSON schema\n\n{\n   \"title\": \"ExactMatchFilter\",\n   \"description\": \"Exact match metadata filter for vector stores.\\\\n\\\\nValue uses Strict\\* types, as int, float and str are compatible types and were all\\\\nconverted to string before.\\\\n\\\\nSee: https://docs.pydantic.dev/latest/usage/types/#strict-types\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"key\": {\n         \"title\": \"Key\",\n         \"type\": \"string\"\n      },\n      \"value\": {\n         \"title\": \"Value\",\n         \"anyOf\": \\[\n            {\n               \"type\": \"integer\"\n            },\n            {\n               \"type\": \"number\"\n            },\n            {\n               \"type\": \"string\"\n            }\n         \\]\n      }\n   },\n   \"required\": \\[\n      \"key\",\n      \"value\"\n   \\]\n}\n\nFields\n\n*   [`key (str)`](#llama_index.vector_stores.types.ExactMatchFilter.key \"llama_index.vector_stores.types.ExactMatchFilter.key\")\n    \n*   [`value (Union[pydantic.types.StrictInt, pydantic.types.StrictFloat, pydantic.types.StrictStr])`](#llama_index.vector_stores.types.ExactMatchFilter.value \"llama_index.vector_stores.types.ExactMatchFilter.value\")\n    \n\n_field_ key_: str_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.key \"Permalink to this definition\")\n\n_field_ value_: Union\\[StrictInt, StrictFloat, StrictStr\\]_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.value \"Permalink to this definition\")\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.from_orm \"Permalink to this definition\")\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.schema_json \"Permalink to this definition\")\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.ExactMatchFilter.validate \"Permalink to this definition\")\n\n_pydantic model_ llama\\_index.vector\\_stores.types.MetadataFilters[\uf0c1](#llama_index.vector_stores.types.MetadataFilters \"Permalink to this definition\")\n\nMetadata filters for vector stores.\n\nCurrently only supports exact match filters. TODO: support more advanced expressions.\n\nShow JSON schema\n\n{\n   \"title\": \"MetadataFilters\",\n   \"description\": \"Metadata filters for vector stores.\\\\n\\\\nCurrently only supports exact match filters.\\\\nTODO: support more advanced expressions.\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"filters\": {\n         \"title\": \"Filters\",\n         \"type\": \"array\",\n         \"items\": {\n            \"$ref\": \"#/definitions/ExactMatchFilter\"\n         }\n      }\n   },\n   \"required\": \\[\n      \"filters\"\n   \\],\n   \"definitions\": {\n      \"ExactMatchFilter\": {\n         \"title\": \"ExactMatchFilter\",\n         \"description\": \"Exact match metadata filter for vector stores.\\\\n\\\\nValue uses Strict\\* types, as int, float and str are compatible types and were all\\\\nconverted to string before.\\\\n\\\\nSee: https://docs.pydantic.dev/latest/usage/types/#strict-types\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"key\": {\n               \"title\": \"Key\",\n               \"type\": \"string\"\n            },\n            \"value\": {\n               \"title\": \"Value\",\n               \"anyOf\": \\[\n                  {\n                     \"type\": \"integer\"\n                  },\n                  {\n                     \"type\": \"number\"\n                  },\n                  {\n                     \"type\": \"string\"\n                  }\n               \\]\n            }\n         },\n         \"required\": \\[\n            \"key\",\n            \"value\"\n         \\]\n      }\n   }\n}\n\nFields\n\n*   [`filters (List[llama_index.vector_stores.types.ExactMatchFilter])`](#llama_index.vector_stores.types.MetadataFilters.filters \"llama_index.vector_stores.types.MetadataFilters.filters\")\n    \n\n_field_ filters_: List\\[[ExactMatchFilter](#llama_index.vector_stores.types.ExactMatchFilter \"llama_index.vector_stores.types.ExactMatchFilter\")\\]_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.filters \"Permalink to this definition\")\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ from\\_dict(_filter\\_dict: Dict_) \u2192 [MetadataFilters](#llama_index.vector_stores.types.MetadataFilters \"llama_index.vector_stores.types.MetadataFilters\")[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.from_dict \"Permalink to this definition\")\n\nCreate MetadataFilters from json.\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.from_orm \"Permalink to this definition\")\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.schema_json \"Permalink to this definition\")\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataFilters.validate \"Permalink to this definition\")\n\n_pydantic model_ llama\\_index.vector\\_stores.types.MetadataInfo[\uf0c1](#llama_index.vector_stores.types.MetadataInfo \"Permalink to this definition\")\n\nInformation about a metadata filter supported by a vector store.\n\nCurrently only used by VectorIndexAutoRetriever.\n\nShow JSON schema\n\n{\n   \"title\": \"MetadataInfo\",\n   \"description\": \"Information about a metadata filter supported by a vector store.\\\\n\\\\nCurrently only used by VectorIndexAutoRetriever.\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"name\": {\n         \"title\": \"Name\",\n         \"type\": \"string\"\n      },\n      \"type\": {\n         \"title\": \"Type\",\n         \"type\": \"string\"\n      },\n      \"description\": {\n         \"title\": \"Description\",\n         \"type\": \"string\"\n      }\n   },\n   \"required\": \\[\n      \"name\",\n      \"type\",\n      \"description\"\n   \\]\n}\n\nFields\n\n*   [`description (str)`](#llama_index.vector_stores.types.MetadataInfo.description \"llama_index.vector_stores.types.MetadataInfo.description\")\n    \n*   [`name (str)`](#llama_index.vector_stores.types.MetadataInfo.name \"llama_index.vector_stores.types.MetadataInfo.name\")\n    \n*   [`type (str)`](#llama_index.vector_stores.types.MetadataInfo.type \"llama_index.vector_stores.types.MetadataInfo.type\")\n    \n\n_field_ description_: str_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.description \"Permalink to this definition\")\n\n_field_ name_: str_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.name \"Permalink to this definition\")\n\n_field_ type_: str_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.type \"Permalink to this definition\")\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.from_orm \"Permalink to this definition\")\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.schema_json \"Permalink to this definition\")\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.MetadataInfo.validate \"Permalink to this definition\")\n\n_pydantic model_ llama\\_index.vector\\_stores.types.VectorStoreInfo[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo \"Permalink to this definition\")\n\nInformation about a vector store (content and supported metadata filters).\n\nCurrently only used by VectorIndexAutoRetriever.\n\nShow JSON schema\n\n{\n   \"title\": \"VectorStoreInfo\",\n   \"description\": \"Information about a vector store (content and supported metadata filters).\\\\n\\\\nCurrently only used by VectorIndexAutoRetriever.\",\n   \"type\": \"object\",\n   \"properties\": {\n      \"metadata\\_info\": {\n         \"title\": \"Metadata Info\",\n         \"type\": \"array\",\n         \"items\": {\n            \"$ref\": \"#/definitions/MetadataInfo\"\n         }\n      },\n      \"content\\_info\": {\n         \"title\": \"Content Info\",\n         \"type\": \"string\"\n      }\n   },\n   \"required\": \\[\n      \"metadata\\_info\",\n      \"content\\_info\"\n   \\],\n   \"definitions\": {\n      \"MetadataInfo\": {\n         \"title\": \"MetadataInfo\",\n         \"description\": \"Information about a metadata filter supported by a vector store.\\\\n\\\\nCurrently only used by VectorIndexAutoRetriever.\",\n         \"type\": \"object\",\n         \"properties\": {\n            \"name\": {\n               \"title\": \"Name\",\n               \"type\": \"string\"\n            },\n            \"type\": {\n               \"title\": \"Type\",\n               \"type\": \"string\"\n            },\n            \"description\": {\n               \"title\": \"Description\",\n               \"type\": \"string\"\n            }\n         },\n         \"required\": \\[\n            \"name\",\n            \"type\",\n            \"description\"\n         \\]\n      }\n   }\n}\n\nFields\n\n*   [`content_info (str)`](#llama_index.vector_stores.types.VectorStoreInfo.content_info \"llama_index.vector_stores.types.VectorStoreInfo.content_info\")\n    \n*   [`metadata_info (List[llama_index.vector_stores.types.MetadataInfo])`](#llama_index.vector_stores.types.VectorStoreInfo.metadata_info \"llama_index.vector_stores.types.VectorStoreInfo.metadata_info\")\n    \n\n_field_ content\\_info_: str_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.content_info \"Permalink to this definition\")\n\n_field_ metadata\\_info_: List\\[[MetadataInfo](#llama_index.vector_stores.types.MetadataInfo \"llama_index.vector_stores.types.MetadataInfo\")\\]_ _\\[Required\\]_[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.metadata_info \"Permalink to this definition\")\n\n_classmethod_ construct(_\\_fields\\_set: Optional\\[SetStr\\] \\= None_, _\\*\\*values: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.construct \"Permalink to this definition\")\n\nCreates a new model setting \\_\\_dict\\_\\_ and \\_\\_fields\\_set\\_\\_ from trusted or pre-validated data. Default values are respected, but no other validation is performed. Behaves as if Config.extra = \u2018allow\u2019 was set since it adds all passed values\n\ncopy(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _update: Optional\\[DictStrAny\\] \\= None_, _deep: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.copy \"Permalink to this definition\")\n\nDuplicate a model, optionally choose which fields to include, exclude and change.\n\nParameters\n\n*   **include** \u2013 fields to include in new model\n    \n*   **exclude** \u2013 fields to exclude from new model, as with values this takes precedence over include\n    \n*   **update** \u2013 values to change/add in the new model. Note: the data is not validated before creating the new model: you should trust this data\n    \n*   **deep** \u2013 set to True to make a deep copy of the model\n    \n\nReturns\n\nnew model instance\n\ndict(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.dict \"Permalink to this definition\")\n\nGenerate a dictionary representation of the model, optionally specifying which fields to include or exclude.\n\n_classmethod_ from\\_orm(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.from_orm \"Permalink to this definition\")\n\njson(_\\*_, _include: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _exclude: Optional\\[Union\\[AbstractSetIntStr, MappingIntStrAny\\]\\] \\= None_, _by\\_alias: bool \\= False_, _skip\\_defaults: Optional\\[bool\\] \\= None_, _exclude\\_unset: bool \\= False_, _exclude\\_defaults: bool \\= False_, _exclude\\_none: bool \\= False_, _encoder: Optional\\[Callable\\[\\[Any\\], Any\\]\\] \\= None_, _models\\_as\\_dict: bool \\= True_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.json \"Permalink to this definition\")\n\nGenerate a JSON representation of the model, include and exclude arguments as per dict().\n\nencoder is an optional function to supply as default to json.dumps(), other arguments as per json.dumps().\n\n_classmethod_ parse\\_file(_path: Union\\[str, Path\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.parse_file \"Permalink to this definition\")\n\n_classmethod_ parse\\_obj(_obj: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.parse_obj \"Permalink to this definition\")\n\n_classmethod_ parse\\_raw(_b: Union\\[str, bytes\\]_, _\\*_, _content\\_type: unicode \\= None_, _encoding: unicode \\= 'utf8'_, _proto: Protocol \\= None_, _allow\\_pickle: bool \\= False_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.parse_raw \"Permalink to this definition\")\n\n_classmethod_ schema(_by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_) \u2192 DictStrAny[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.schema \"Permalink to this definition\")\n\n_classmethod_ schema\\_json(_\\*_, _by\\_alias: bool \\= True_, _ref\\_template: unicode \\= '#/definitions/{model}'_, _\\*\\*dumps\\_kwargs: Any_) \u2192 unicode[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.schema_json \"Permalink to this definition\")\n\n_classmethod_ update\\_forward\\_refs(_\\*\\*localns: Any_) \u2192 None[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.update_forward_refs \"Permalink to this definition\")\n\nTry to update ForwardRefs on fields based on this Model, globalns and localns.\n\n_classmethod_ validate(_value: Any_) \u2192 Model[\uf0c1](#llama_index.vector_stores.types.VectorStoreInfo.validate \"Permalink to this definition\")\n\n_class_ llama\\_index.vector\\_stores.types.VectorStoreQueryMode(_value_, _names\\=None_, _\\*_, _module\\=None_, _qualname\\=None_, _type\\=None_, _start\\=1_, _boundary\\=None_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode \"Permalink to this definition\")\n\nVector store query mode.\n\ncapitalize()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.capitalize \"Permalink to this definition\")\n\nReturn a capitalized version of the string.\n\nMore specifically, make the first character have upper case and the rest lower case.\n\ncasefold()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.casefold \"Permalink to this definition\")\n\nReturn a version of the string suitable for caseless comparisons.\n\ncenter(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.center \"Permalink to this definition\")\n\nReturn a centered string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\ncount(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.count \"Permalink to this definition\")\n\nReturn the number of non-overlapping occurrences of substring sub in string S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nencode(_encoding\\='utf-8'_, _errors\\='strict'_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.encode \"Permalink to this definition\")\n\nEncode the string using the codec registered for encoding.\n\nencoding\n\nThe encoding in which to encode the string.\n\nerrors\n\nThe error handling scheme to use for encoding errors. The default is \u2018strict\u2019 meaning that encoding errors raise a UnicodeEncodeError. Other possible values are \u2018ignore\u2019, \u2018replace\u2019 and \u2018xmlcharrefreplace\u2019 as well as any other name registered with codecs.register\\_error that can handle UnicodeEncodeErrors.\n\nendswith(_suffix_\\[, _start_\\[, _end_\\]\\]) \u2192 bool[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.endswith \"Permalink to this definition\")\n\nReturn True if S ends with the specified suffix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. suffix can also be a tuple of strings to try.\n\nexpandtabs(_tabsize\\=8_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.expandtabs \"Permalink to this definition\")\n\nReturn a copy where all tab characters are expanded using spaces.\n\nIf tabsize is not given, a tab size of 8 characters is assumed.\n\nfind(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.find \"Permalink to this definition\")\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\nformat(_\\*args_, _\\*\\*kwargs_) \u2192 str[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.format \"Permalink to this definition\")\n\nReturn a formatted version of S, using substitutions from args and kwargs. The substitutions are identified by braces (\u2018{\u2018 and \u2018}\u2019).\n\nformat\\_map(_mapping_) \u2192 str[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.format_map \"Permalink to this definition\")\n\nReturn a formatted version of S, using substitutions from mapping. The substitutions are identified by braces (\u2018{\u2018 and \u2018}\u2019).\n\nindex(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.index \"Permalink to this definition\")\n\nReturn the lowest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\nisalnum()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isalnum \"Permalink to this definition\")\n\nReturn True if the string is an alpha-numeric string, False otherwise.\n\nA string is alpha-numeric if all characters in the string are alpha-numeric and there is at least one character in the string.\n\nisalpha()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isalpha \"Permalink to this definition\")\n\nReturn True if the string is an alphabetic string, False otherwise.\n\nA string is alphabetic if all characters in the string are alphabetic and there is at least one character in the string.\n\nisascii()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isascii \"Permalink to this definition\")\n\nReturn True if all characters in the string are ASCII, False otherwise.\n\nASCII characters have code points in the range U+0000-U+007F. Empty string is ASCII too.\n\nisdecimal()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isdecimal \"Permalink to this definition\")\n\nReturn True if the string is a decimal string, False otherwise.\n\nA string is a decimal string if all characters in the string are decimal and there is at least one character in the string.\n\nisdigit()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isdigit \"Permalink to this definition\")\n\nReturn True if the string is a digit string, False otherwise.\n\nA string is a digit string if all characters in the string are digits and there is at least one character in the string.\n\nisidentifier()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isidentifier \"Permalink to this definition\")\n\nReturn True if the string is a valid Python identifier, False otherwise.\n\nCall keyword.iskeyword(s) to test whether string s is a reserved identifier, such as \u201cdef\u201d or \u201cclass\u201d.\n\nislower()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.islower \"Permalink to this definition\")\n\nReturn True if the string is a lowercase string, False otherwise.\n\nA string is lowercase if all cased characters in the string are lowercase and there is at least one cased character in the string.\n\nisnumeric()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isnumeric \"Permalink to this definition\")\n\nReturn True if the string is a numeric string, False otherwise.\n\nA string is numeric if all characters in the string are numeric and there is at least one character in the string.\n\nisprintable()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isprintable \"Permalink to this definition\")\n\nReturn True if the string is printable, False otherwise.\n\nA string is printable if all of its characters are considered printable in repr() or if it is empty.\n\nisspace()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isspace \"Permalink to this definition\")\n\nReturn True if the string is a whitespace string, False otherwise.\n\nA string is whitespace if all characters in the string are whitespace and there is at least one character in the string.\n\nistitle()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.istitle \"Permalink to this definition\")\n\nReturn True if the string is a title-cased string, False otherwise.\n\nIn a title-cased string, upper- and title-case characters may only follow uncased characters and lowercase characters only cased ones.\n\nisupper()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.isupper \"Permalink to this definition\")\n\nReturn True if the string is an uppercase string, False otherwise.\n\nA string is uppercase if all cased characters in the string are uppercase and there is at least one cased character in the string.\n\njoin(_iterable_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.join \"Permalink to this definition\")\n\nConcatenate any number of strings.\n\nThe string whose method is called is inserted in between each given string. The result is returned as a new string.\n\nExample: \u2018.\u2019.join(\\[\u2018ab\u2019, \u2018pq\u2019, \u2018rs\u2019\\]) -> \u2018ab.pq.rs\u2019\n\nljust(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.ljust \"Permalink to this definition\")\n\nReturn a left-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\nlower()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.lower \"Permalink to this definition\")\n\nReturn a copy of the string converted to lowercase.\n\nlstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.lstrip \"Permalink to this definition\")\n\nReturn a copy of the string with leading whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\n_static_ maketrans()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.maketrans \"Permalink to this definition\")\n\nReturn a translation table usable for str.translate().\n\nIf there is only one argument, it must be a dictionary mapping Unicode ordinals (integers) or characters to Unicode ordinals, strings or None. Character keys will be then converted to ordinals. If there are two arguments, they must be strings of equal length, and in the resulting dictionary, each character in x will be mapped to the character at the same position in y. If there is a third argument, it must be a string, whose characters will be mapped to None in the result.\n\npartition(_sep_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.partition \"Permalink to this definition\")\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing the original string and two empty strings.\n\nremoveprefix(_prefix_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.removeprefix \"Permalink to this definition\")\n\nReturn a str with the given prefix string removed if present.\n\nIf the string starts with the prefix string, return string\\[len(prefix):\\]. Otherwise, return a copy of the original string.\n\nremovesuffix(_suffix_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.removesuffix \"Permalink to this definition\")\n\nReturn a str with the given suffix string removed if present.\n\nIf the string ends with the suffix string and that suffix is not empty, return string\\[:-len(suffix)\\]. Otherwise, return a copy of the original string.\n\nreplace(_old_, _new_, _count\\=\\-1_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.replace \"Permalink to this definition\")\n\nReturn a copy with all occurrences of substring old replaced by new.\n\n> count\n> \n> Maximum number of occurrences to replace. -1 (the default value) means replace all occurrences.\n\nIf the optional argument count is given, only the first count occurrences are replaced.\n\nrfind(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.rfind \"Permalink to this definition\")\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nReturn -1 on failure.\n\nrindex(_sub_\\[, _start_\\[, _end_\\]\\]) \u2192 int[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.rindex \"Permalink to this definition\")\n\nReturn the highest index in S where substring sub is found, such that sub is contained within S\\[start:end\\]. Optional arguments start and end are interpreted as in slice notation.\n\nRaises ValueError when the substring is not found.\n\nrjust(_width_, _fillchar\\=' '_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.rjust \"Permalink to this definition\")\n\nReturn a right-justified string of length width.\n\nPadding is done using the specified fill character (default is a space).\n\nrpartition(_sep_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.rpartition \"Permalink to this definition\")\n\nPartition the string into three parts using the given separator.\n\nThis will search for the separator in the string, starting at the end. If the separator is found, returns a 3-tuple containing the part before the separator, the separator itself, and the part after it.\n\nIf the separator is not found, returns a 3-tuple containing two empty strings and the original string.\n\nrsplit(_sep\\=None_, _maxsplit\\=\\-1_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.rsplit \"Permalink to this definition\")\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n> sep\n> \n> The separator used to split the string.\n> \n> When set to None (the default value), will split on any whitespace character (including n r t f and spaces) and will discard empty strings from the result.\n> \n> maxsplit\n> \n> Maximum number of splits (starting from the left). -1 (the default value) means no limit.\n\nSplitting starts at the end of the string and works to the front.\n\nrstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.rstrip \"Permalink to this definition\")\n\nReturn a copy of the string with trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\nsplit(_sep\\=None_, _maxsplit\\=\\-1_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.split \"Permalink to this definition\")\n\nReturn a list of the substrings in the string, using sep as the separator string.\n\n> sep\n> \n> The separator used to split the string.\n> \n> When set to None (the default value), will split on any whitespace character (including n r t f and spaces) and will discard empty strings from the result.\n> \n> maxsplit\n> \n> Maximum number of splits (starting from the left). -1 (the default value) means no limit.\n\nNote, str.split() is mainly useful for data that has been intentionally delimited. With natural text that includes punctuation, consider using the regular expression module.\n\nsplitlines(_keepends\\=False_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.splitlines \"Permalink to this definition\")\n\nReturn a list of the lines in the string, breaking at line boundaries.\n\nLine breaks are not included in the resulting list unless keepends is given and true.\n\nstartswith(_prefix_\\[, _start_\\[, _end_\\]\\]) \u2192 bool[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.startswith \"Permalink to this definition\")\n\nReturn True if S starts with the specified prefix, False otherwise. With optional start, test S beginning at that position. With optional end, stop comparing S at that position. prefix can also be a tuple of strings to try.\n\nstrip(_chars\\=None_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.strip \"Permalink to this definition\")\n\nReturn a copy of the string with leading and trailing whitespace removed.\n\nIf chars is given and not None, remove characters in chars instead.\n\nswapcase()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.swapcase \"Permalink to this definition\")\n\nConvert uppercase characters to lowercase and lowercase characters to uppercase.\n\ntitle()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.title \"Permalink to this definition\")\n\nReturn a version of the string where each word is titlecased.\n\nMore specifically, words start with uppercased characters and all remaining cased characters have lower case.\n\ntranslate(_table_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.translate \"Permalink to this definition\")\n\nReplace each character in the string using the given translation table.\n\n> table\n> \n> Translation table, which must be a mapping of Unicode ordinals to Unicode ordinals, strings, or None.\n\nThe table must implement lookup/indexing via \\_\\_getitem\\_\\_, for instance a dictionary or list. If this operation raises LookupError, the character is left untouched. Characters mapped to None are deleted.\n\nupper()[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.upper \"Permalink to this definition\")\n\nReturn a copy of the string converted to uppercase.\n\nzfill(_width_, _/_)[\uf0c1](#llama_index.vector_stores.types.VectorStoreQueryMode.zfill \"Permalink to this definition\")\n\nPad a numeric string with zeros on the left, to fill a field of the given width.\n\nThe string is never truncated."
}