{
    "metadata": {
        "type": "repo",
        "path": "stream_gpt/types/document.py"
    },
    "text": "import json\nfrom typing import Dict, Any\nimport os\n\nclass Document:\n    def __init__(self, metadata: Dict[str, Any]={}, text: str=''):\n        self.metadata = metadata\n        self.text = text\n    \n    def save_to_file(self, path):\n        '''\n        Include the path to the folder you want to save the document in.\n        The name of the file will be the title of the document, which is already in the metadata.\n        '''\n        document_data = {\n            'metadata': self.metadata,\n            'text': self.text\n        }\n        \n        if self.metadata['type']=='pdf':\n            file_path = os.path.join(path, self.metadata['title'].replace('/', '_').replace(' ', '_')) + '.json'\n        elif self.metadata['type']=='github_repo':\n            file_path = os.path.join(path + self.metadata['path'].replace('/', '_').replace(' ', '_')) + '.json'\n        elif self.metadata['type']=='website':\n            file_path = os.path.join(path + self.metadata['title'].replace('/', '_').replace(' ', '_')) + '.json'\n        else:\n            raise Exception(f'Invalid document type: {self.metadata[\"type\"]}')\n        \n        # Create the directory if it doesn't exist\n        os.makedirs(path, exist_ok=True)\n        \n        with open(file_path, 'w') as file:\n            json.dump(document_data, file, indent=4)\n    \n    @classmethod\n    def load_from_file(cls, file_path: str):\n        with open(file_path, 'r') as file:\n            document_data = json.load(file)\n        return cls(\n            metadata=document_data.get('metadata', {}),\n            text=document_data.get('text', '')\n        )\n        "
}