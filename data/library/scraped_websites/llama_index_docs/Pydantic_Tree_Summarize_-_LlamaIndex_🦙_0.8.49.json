{
    "metadata": {
        "type": "web",
        "url": "https://docs.llamaindex.ai/en/stable/examples/response_synthesizers/pydantic_tree_summarize.html",
        "title": "Pydantic Tree Summarize - LlamaIndex \ud83e\udd99 0.8.49",
        "description": null
    },
    "text": "[Back to top](#)\n\nToggle table of contents sidebar\n\n## Pydantic Tree Summarize[\uf0c1](#pydantic-tree-summarize \"Permalink to this heading\")\n\nIn this notebook, we demonstrate how to use tree summarize with structured outputs. Specifically, tree summarize is used to output pydantic objects.\n\nimport os\nimport openai\n\nos.environ\\[\"OPENAI\\_API\\_KEY\"\\] \\= \"sk-...\"\nopenai.api\\_key \\= os.environ\\[\"OPENAI\\_API\\_KEY\"\\]\n\n## Load Data[\uf0c1](#load-data \"Permalink to this heading\")\n\nfrom llama\\_index import SimpleDirectoryReader\n\nreader \\= SimpleDirectoryReader(\n    input\\_files\\=\\[\"../data/paul\\_graham/paul\\_graham\\_essay.txt\"\\]\n)\n\ndocs \\= reader.load\\_data()\n\n## Summarize[\uf0c1](#summarize \"Permalink to this heading\")\n\nfrom llama\\_index.response\\_synthesizers import TreeSummarize\nfrom llama\\_index.types import BaseModel\nfrom typing import List\n\n### Create pydantic model to structure response[\uf0c1](#create-pydantic-model-to-structure-response \"Permalink to this heading\")\n\nclass Biography(BaseModel):\n    \"\"\"Data model for a biography.\"\"\"\n\n    name: str\n    best\\_known\\_for: List\\[str\\]\n    extra\\_info: str\n\nsummarizer \\= TreeSummarize(verbose\\=True, output\\_cls\\=Biography)\n\nresponse \\= summarizer.get\\_response(\"who is Paul Graham?\", \\[text\\])\n\n5 text chunks after repacking\n1 text chunks after repacking\n\n### Inspect the response[\uf0c1](#inspect-the-response \"Permalink to this heading\")\n\nHere, we see the response is in an instance of our `Biography` class.\n\nname='Paul Graham' best\\_known\\_for=\\['Writing', 'Programming', 'Art', 'Co-founding Viaweb', 'Co-founding Y Combinator', 'Essayist'\\] extra\\_info=\"Paul Graham is a multi-talented individual who has made significant contributions in various fields. He is known for his work in writing, programming, art, co-founding Viaweb, co-founding Y Combinator, and his essays on startups and programming. He started his career by writing short stories and programming on the IBM 1401 computer. He later became interested in artificial intelligence and Lisp programming. He wrote a book called 'On Lisp' and focused on Lisp hacking. Eventually, he decided to pursue art and attended art school. He is known for his paintings, particularly still life paintings. Graham is also a programmer, entrepreneur, and venture capitalist. He co-founded Viaweb, an early e-commerce platform, and Y Combinator, a startup accelerator. He has written influential essays on startups and programming. Additionally, he has made contributions to the field of computer programming and entrepreneurship.\"\n\nprint(response.best\\_known\\_for)\n\n\\['Writing', 'Programming', 'Art', 'Co-founding Viaweb', 'Co-founding Y Combinator', 'Essayist'\\]\n\nprint(response.extra\\_info)\n\nPaul Graham is a multi-talented individual who has made significant contributions in various fields. He is known for his work in writing, programming, art, co-founding Viaweb, co-founding Y Combinator, and his essays on startups and programming. He started his career by writing short stories and programming on the IBM 1401 computer. He later became interested in artificial intelligence and Lisp programming. He wrote a book called 'On Lisp' and focused on Lisp hacking. Eventually, he decided to pursue art and attended art school. He is known for his paintings, particularly still life paintings. Graham is also a programmer, entrepreneur, and venture capitalist. He co-founded Viaweb, an early e-commerce platform, and Y Combinator, a startup accelerator. He has written influential essays on startups and programming. Additionally, he has made contributions to the field of computer programming and entrepreneurship."
}